[
    {
        "id": "3a9e22dc3ac5863d",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e6e24a9ec0db5bf1",
        "type": "tab",
        "label": "Nordnet shares",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b6b3133e4b13c3d6",
        "type": "tab",
        "label": "Nordnet funds",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "94e6a2d5fcdd6bfd",
        "type": "tab",
        "label": "Avanza funds",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3d8b3054c8fc3986",
        "type": "tab",
        "label": "Avanza shares",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e730aec3bcfbca6b",
        "type": "subflow",
        "name": "syno upload",
        "info": "This subflow will allow you to upload files to your Synology NAS in a quick and simple way.\n\nIt will check to see if a sesison token already exists and if not will log in and create one for you.\n\n---\n\n# Node Configuration\n## Address\nThe full URL and port of your Synology NAS.\nExample: `https://nas.myds.com:5001` \n\n## Username\nThe name of the user to login to the NAS with.  It is suggested that you use a separate user account for backups\n\n## Password\nThe password of the above username\n\n---\n\n# Inputs\n## `msg.localFile`\nThe full name and path of the file you want to upload to your NAS. \n\n## `msg.remotePath`\nThe full path on your NAS of where you want to put the file.\n\n## `msg.login` (optional)\nIf set to `true` then the curent session token is removed and a new one generated.  This will also reset the 7 day timeout.\n\n## `msg.logout` (optional)\nIf set to `true` then the current session token is removed and the synology session closed.\n\nThe Synology default timeout for all session tokens is 7 days.\n\n---\n\n# Outputs\n## Output\nOn login, logout or file upload all messages will be send to the first output of the node.\n\n## Debug\nShows all output from the node.\n\n## Error\nIf an error occurs it will be sent to the second output of the node with all the data relating to the error.\n\nAn internal lookup table will also show you the error message as well as the returned error number.\n",
        "category": "",
        "in": [],
        "out": [],
        "env": [
            {
                "name": "Address",
                "type": "str",
                "value": "\\\\192.168.50.60:5000",
                "ui": {
                    "icon": "font-awesome/fa-server",
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            },
            {
                "name": "Username",
                "type": "str",
                "value": "homeassistant",
                "ui": {
                    "icon": "font-awesome/fa-user-o",
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            },
            {
                "name": "Password",
                "type": "cred",
                "ui": {
                    "icon": "font-awesome/fa-hashtag"
                }
            },
            {
                "name": "",
                "type": "str",
                "value": "",
                "ui": {
                    "type": "none"
                }
            },
            {
                "name": "Overwrite",
                "type": "str",
                "value": "overwrite",
                "ui": {
                    "icon": "font-awesome/fa-edit",
                    "type": "select",
                    "opts": {
                        "opts": [
                            {
                                "l": {
                                    "en-US": "Overwrite"
                                },
                                "v": "overwrite"
                            },
                            {
                                "l": {
                                    "en-US": "Skip"
                                },
                                "v": "skip"
                            }
                        ]
                    }
                }
            },
            {
                "name": "Output",
                "type": "bool",
                "value": "true",
                "ui": {
                    "icon": "font-awesome/fa-align-justify",
                    "type": "input",
                    "opts": {
                        "types": [
                            "bool"
                        ]
                    }
                }
            },
            {
                "name": "Send to the Output every uploaded filename (Debug will always output)",
                "type": "str",
                "value": "",
                "ui": {
                    "type": "none"
                }
            }
        ],
        "meta": {
            "module": "syno_upload",
            "type": "subflow",
            "version": "0.0.1",
            "author": "support@myrandomthoughts.co.uk",
            "desc": "Subflow to allow uploading of files to a Synology DiskStation",
            "keywords": "Synology File Upload",
            "license": "MIT"
        },
        "color": "#DEB887",
        "icon": "font-awesome/fa-upload"
    },
    {
        "id": "1c6d549d1999239b",
        "type": "subflow",
        "name": "Create files",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "ed83061089914dcb"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1080,
                "y": 140,
                "wires": [
                    {
                        "id": "59bbe60d44501660",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "94dcf7e660681c4a",
        "type": "tibber-api-endpoint",
        "queryUrl": "https://api.tibber.com/v1-beta/gql",
        "feedConnectionTimeout": "30",
        "feedTimeout": "60",
        "queryRequestTimeout": "30",
        "name": "Get prices"
    },
    {
        "id": "e1a454ab75f8638a",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "946b3d5701222de0",
        "type": "ui_tab",
        "name": "Elpriser",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "012dce18c52d7732",
        "type": "ui_group",
        "name": "Tibber",
        "tab": "946b3d5701222de0",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b5dbe369927b0dba",
        "type": "server",
        "name": "Home Assistant",
        "version": 5,
        "addon": false,
        "rejectUnauthorizedCerts": true,
        "ha_boolean": "y|yes|true|on|home|open",
        "connectionDelay": true,
        "cacheJson": true,
        "heartbeat": false,
        "heartbeatInterval": "30",
        "areaSelector": "friendlyName",
        "deviceSelector": "friendlyName",
        "entitySelector": "friendlyName",
        "statusSeparator": ": ",
        "statusYear": "hidden",
        "statusMonth": "short",
        "statusDay": "numeric",
        "statusHourCycle": "default",
        "statusTimeFormat": "h:m",
        "enableGlobalContextStore": false
    },
    {
        "id": "f642abd1dfd0f8b0",
        "type": "smb config",
        "name": "Funds_Shares",
        "share": "smb:\\\\NormansStorage2\\homes\\homeassistant",
        "domain": ""
    },
    {
        "id": "7c0e12e7685f0313",
        "type": "DS Config",
        "name": "NAS",
        "protocol": "https",
        "apiVersion": "6.0.2"
    },
    {
        "id": "cecfb491.8e3c98",
        "type": "DS Config",
        "name": "Conf",
        "protocol": "http",
        "apiVersion": "6.0.2"
    },
    {
        "id": "c09f346ae50d8da3",
        "type": "MySQLdatabase",
        "name": "Funds",
        "host": "192.168.50.153",
        "port": "3307",
        "db": "Funds",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "ed83061089914dcb",
        "type": "function",
        "z": "1c6d549d1999239b",
        "name": "File headers",
        "func": "let headers = \"ID,ISIN,NAME,INSTRUMENT_GROUP_TYPE,INSTRUMENT_TYPE,PE,PS,EPS,PB,DIV_PER_SHARE,DIV_YIELD,YIELD_1D,YIELD_1W,YIELD_1M,YIELD_3M,EXCHANGE_COUNTRY,EXCHANGE_NAME,EXCHANGE_LIST\"\nreturn {payload: headers }\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 80,
        "wires": [
            [
                "0435b2aa945c5ec3"
            ]
        ]
    },
    {
        "id": "0435b2aa945c5ec3",
        "type": "file",
        "z": "1c6d549d1999239b",
        "name": "Create file with headers",
        "filename": "\\\\192.168.50.60\\homes\\Martin\\Result_NodeRED\\shares.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 450,
        "y": 80,
        "wires": [
            [
                "5c57c699f13f2f3c"
            ]
        ]
    },
    {
        "id": "5c57c699f13f2f3c",
        "type": "function",
        "z": "1c6d549d1999239b",
        "name": "File headers",
        "func": "let headers = \"ID,DIVIDEND,RECORDDATE,XDATE\"\nreturn {payload: headers }\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 80,
        "wires": [
            [
                "0a87b7297513e806"
            ]
        ]
    },
    {
        "id": "0a87b7297513e806",
        "type": "file",
        "z": "1c6d549d1999239b",
        "name": "Create file with headers",
        "filename": "\\\\192.168.50.60\\homes\\Martin\\Result_NodeRED\\dividends.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 890,
        "y": 80,
        "wires": [
            [
                "d92fa2b76b2add48"
            ]
        ]
    },
    {
        "id": "d92fa2b76b2add48",
        "type": "function",
        "z": "1c6d549d1999239b",
        "name": "File headers",
        "func": "let headers = \"ID,SECTOR_LEVEL1,SECTOR_LEVEL2,SECTOR_LEVEL\"\nreturn {payload: headers }\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 140,
        "wires": [
            [
                "59bbe60d44501660"
            ]
        ]
    },
    {
        "id": "59bbe60d44501660",
        "type": "file",
        "z": "1c6d549d1999239b",
        "name": "Create file with headers",
        "filename": "\\\\192.168.50.60\\homes\\Martin\\Result_NodeRED\\sectors.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 450,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "35e5d82e576934b7",
        "type": "http request",
        "z": "3a9e22dc3ac5863d",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 490,
        "y": 100,
        "wires": [
            [
                "c7c999b1bffc784c",
                "e053c141f01015a4"
            ]
        ]
    },
    {
        "id": "09f3805d0523f626",
        "type": "inject",
        "z": "3a9e22dc3ac5863d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 100,
        "wires": [
            [
                "e21887f9dbbb3be5"
            ]
        ]
    },
    {
        "id": "e21887f9dbbb3be5",
        "type": "function",
        "z": "3a9e22dc3ac5863d",
        "name": "Prepare query",
        "func": "\nmsg.method = \"POST\"\nmsg.url = \"https://api.tibber.com/v1-beta/gql\" \nmsg.headers = {}\nmsg.headers[\"Content-Type\"] = \"application/json\"\nmsg.headers[\"Authorization\"] = \"Bearer \" + \"vhfqcMUKU4eqbY1LoHACFpkP_Ratb80cXv563eAoijU\";\nmsg.payload = { \n    \"query\": \"{viewer {homes {currentSubscription {priceInfo {today {total startsAt } tomorrow {total startsAt }}}}}}\" \n            }\nreturn msg\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 100,
        "wires": [
            [
                "35e5d82e576934b7",
                "c019d82d019d63d5"
            ]
        ]
    },
    {
        "id": "fcbc2fc50d821be9",
        "type": "debug",
        "z": "3a9e22dc3ac5863d",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 300,
        "y": 280,
        "wires": []
    },
    {
        "id": "c7c999b1bffc784c",
        "type": "function",
        "z": "3a9e22dc3ac5863d",
        "name": "function 2",
        "func": "var today = msg.payload.data.viewer.homes[0].currentSubscription.priceInfo.today;\nvar tomorrow = msg.payload.data.viewer.homes[0].currentSubscription.priceInfo.tomorrow;\nmsg.today = today;\nmsg.tomorrow = tomorrow;\n\nvar arr_nearfuture = [];\nfor (var i = 0; i <= 23; i++) {\n    arr_nearfuture.push({ \"x\": today[i].startsAt, \"y\": today[i].total })\n}\n\nfor (var i = 0; i <= 23; i++) {\n    arr_nearfuture.push({ \"x\": tomorrow[i].startsAt, \"y\": tomorrow[i].total })\n}\n\nmsg.nearfuture = arr_nearfuture;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 120,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "a775b506808f4f5a",
        "type": "ui_chart",
        "z": "3a9e22dc3ac5863d",
        "name": "",
        "group": "012dce18c52d7732",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 270,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "c019d82d019d63d5",
        "type": "debug",
        "z": "3a9e22dc3ac5863d",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 180,
        "wires": []
    },
    {
        "id": "e053c141f01015a4",
        "type": "debug",
        "z": "3a9e22dc3ac5863d",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 60,
        "wires": []
    },
    {
        "id": "745f29f19a4be512",
        "type": "http request",
        "z": "3a9e22dc3ac5863d",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 510,
        "y": 520,
        "wires": [
            [
                "8bd696d6db8541b7"
            ]
        ]
    },
    {
        "id": "2f9b09e837e34830",
        "type": "inject",
        "z": "3a9e22dc3ac5863d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 520,
        "wires": [
            [
                "d0f48987f15f2378"
            ]
        ]
    },
    {
        "id": "d0f48987f15f2378",
        "type": "function",
        "z": "3a9e22dc3ac5863d",
        "name": "Prepare query",
        "func": "\nmsg.method = \"POST\"\nmsg.url = \"https://api.tibber.com/v1-beta/gql\" \nmsg.headers = {}\nmsg.headers[\"Content-Type\"] = \"application/json\"\nmsg.headers[\"Authorization\"] = \"Bearer \" + \"vhfqcMUKU4eqbY1LoHACFpkP_Ratb80cXv563eAoijU\";\nmsg.payload = { \n    \"query\": \"{viewer { name }}\" \n            }\nreturn msg\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 520,
        "wires": [
            [
                "745f29f19a4be512"
            ]
        ]
    },
    {
        "id": "8bd696d6db8541b7",
        "type": "debug",
        "z": "3a9e22dc3ac5863d",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 480,
        "wires": []
    },
    {
        "id": "7a923bdec56516c7",
        "type": "inject",
        "z": "e6e24a9ec0db5bf1",
        "name": "Get next and csrf",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 360,
        "y": 60,
        "wires": [
            [
                "e7a117897beb09ad"
            ]
        ]
    },
    {
        "id": "e7a117897beb09ad",
        "type": "function",
        "z": "e6e24a9ec0db5bf1",
        "name": "Prepare",
        "func": "\nmsg.method = \"GET\"\nmsg.url = \"https://www.nordnet.se\";\nmsg.headers = {};\nmsg.headers['Connection'] = 'keep-alive';\nmsg.headers['Content-Length'] = '0';\nmsg.headers['Pragma'] = 'no-cache';\nmsg.headers['Cache-Control'] = 'no-cache';\nmsg.headers['Origin'] = 'https://www.nordnet.se';\nmsg.headers['User-Agent'] = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.117 Safari/537.36';\nmsg.headers['ntag'] = 'NO_NTAG_RECEIVED_YET';\nmsg.headers['content-type'] = 'application/x-www-form-urlencoded'; \nmsg.headers['Accept'] = 'application/json';\nmsg.headers['client-id'] = 'NEXT';\nmsg.headers['DNT'] = '1';\nmsg.headers['Sec-Fetch-Site'] = 'same-origin';\nmsg.headers['Sec-Fetch-Mode'] = 'cors';\nmsg.headers['Referer'] = 'https://www.nordnet.se/se';\nmsg.headers['Accept-Encoding'] = 'gzip, deflate, br';\nmsg.headers['Accept-Language'] = 'en-US,en;q=0.9,sv;q=0.8,da;q=0.7';\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 60,
        "wires": [
            [
                "5de291d3a5194638"
            ]
        ]
    },
    {
        "id": "5de291d3a5194638",
        "type": "http request",
        "z": "e6e24a9ec0db5bf1",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 710,
        "y": 60,
        "wires": [
            [
                "1c79e942bb6730e7"
            ]
        ]
    },
    {
        "id": "1c79e942bb6730e7",
        "type": "function",
        "z": "e6e24a9ec0db5bf1",
        "name": "Set next and csrf",
        "func": "var NewMsg = {};\n\nvar header = msg.headers[\"set-cookie\"][0];\nvar header2 = JSON.stringify(header);\n\nvar csrf = header2.split(';'[1]);\nvar csrf2 = JSON.stringify(csrf);\n\nvar csrf3 = msg.responseCookies._csrf.value;\nNewMsg.csrf = csrf3;\nflow.set('csrf', csrf3);\n\nvar next = msg.redirectList[0].cookies.NEXT.value;\nNewMsg.next = next;\nflow.set('next', next);\n\nreturn NewMsg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 60,
        "wires": [
            [
                "e7ef91f8185d00b3"
            ]
        ]
    },
    {
        "id": "e7ef91f8185d00b3",
        "type": "function",
        "z": "e6e24a9ec0db5bf1",
        "name": "Prepare",
        "func": "var next = flow.get('next');\nvar csrf = flow.get('csrf');\n\nmsg.method = \"GET\"\nmsg.url = \"https://www.nordnet.se/api/2/instrument_search/query/stocklist?limit=100\"; \nmsg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nmsg.headers['Accept-Language'] = 'en-US,en;q=0.9,sv;q=0.8,da;q=0.7';\nmsg.headers['client-id'] = 'NEXT';\nmsg.headers['ntag'] = '68524b90-39f0-448d-ba6f-2ff921ec7de1';\nmsg.headers['sec-fetch-dest'] = 'empth';\nmsg.headers['sec-fetch-mode'] = 'cors';\nmsg.headers['sec-fetch-site'] = 'same-origin';\nmsg.headers['x-nn-href'] = 'https://www.nordnet.se/marknaden/fondlistor';\nmsg.headers['cookie'] = 'lang=sv; NEXT=' + next + '; csrf=' + csrf + ';_ga=GA1.2.2043169788.1522314173; accepted_cookies=1; coid=1073550482; sv-uts=\\'NTI1YWIzMDAtOGMzMi0xMWU5LWE5OWMtMDA1MDU2YjcwMGI1IzUjMTU2NjQ5NjQwNjYyMg==\\'; nnanon=0d304650-13b4-11ea-b542-23a41990b521; __qca=P0-29952391-1594118770307; nntheme=a11y; _gid=GA1.2.1217256637.1595067687; JSESSIONID=FC85B924EA9BC8B4172A7D7B0AB6A768; webapp-cmse-next=!Bz/qAoh4PAVWfM6/H48idC6JYNNOng3mcN7fKRfCKlfex8XalKNCAx5siZ1VCzcX5UB2QezxYqf6rqnZdGoYFPrQ8Y2Ix160yo2gS3B3MA==; _csrf=zuSi6ub4HT_F_2Sy9OMVvJGD; NEXT=5938adbbf4069248352b7af24167e5c7bf44fdcc; _gat_UA-58430789-7=1';\nmsg.referrer = 'https://www.nordnet.se';\nmsg.referrerPolicy = 'origin';\nmsg.body = null;\nmsg.mode = 'cors';\n\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 260,
        "wires": [
            [
                "c02807bf69f17408"
            ]
        ]
    },
    {
        "id": "c02807bf69f17408",
        "type": "http request",
        "z": "e6e24a9ec0db5bf1",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 710,
        "y": 260,
        "wires": [
            [
                "18f7c5d58e9067ad"
            ]
        ]
    },
    {
        "id": "18f7c5d58e9067ad",
        "type": "function",
        "z": "e6e24a9ec0db5bf1",
        "name": "Extract share info",
        "func": "\nvar no_shares = msg.payload.total_hits / 100; \n//var no_shares = 1;\nmsg.count = parseInt(no_shares);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 260,
        "wires": [
            [
                "0812bf10baa7f0d9"
            ]
        ]
    },
    {
        "id": "0812bf10baa7f0d9",
        "type": "loop",
        "z": "e6e24a9ec0db5bf1",
        "name": "Outer loop",
        "kind": "fcnt",
        "count": "",
        "initial": "0",
        "step": "1",
        "condition": "",
        "conditionType": "jsonata",
        "when": "before",
        "enumeration": "",
        "enumerationType": "msg",
        "limit": "",
        "loopPayload": "loop-index",
        "finalPayload": "final-count",
        "x": 370,
        "y": 340,
        "wires": [
            [
                "94ccef46b4922c98"
            ],
            [
                "2d4be9bdc07ea45c"
            ]
        ]
    },
    {
        "id": "94ccef46b4922c98",
        "type": "debug",
        "z": "e6e24a9ec0db5bf1",
        "name": "Done",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 320,
        "wires": []
    },
    {
        "id": "9176a32694386490",
        "type": "function",
        "z": "e6e24a9ec0db5bf1",
        "name": "Prepare",
        "func": "var next = flow.get('next');\nvar csrf = flow.get('csrf');\n\nmsg.method = \"GET\"\nmsg.url = \"https://www.nordnet.se/api/2/instrument_search/query/stocklist?limit=100&offset=\" + (msg.loop.value * 100);\nmsg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nmsg.headers['Accept-Language'] = 'en-US,en;q=0.9,sv;q=0.8,da;q=0.7';\nmsg.headers['client-id'] = 'NEXT';\nmsg.headers['ntag'] = '68524b90-39f0-448d-ba6f-2ff921ec7de1';\nmsg.headers['sec-fetch-dest'] = 'empth';\nmsg.headers['sec-fetch-mode'] = 'cors';\nmsg.headers['sec-fetch-site'] = 'same-origin';\nmsg.headers['x-nn-href'] = 'https://www.nordnet.se/marknaden/fondlistor';\nmsg.headers['cookie'] = 'lang=sv; NEXT=' + next + '; csrf=' + csrf + ';_ga=GA1.2.2043169788.1522314173; accepted_cookies=1; coid=1073550482; sv-uts=\\'NTI1YWIzMDAtOGMzMi0xMWU5LWE5OWMtMDA1MDU2YjcwMGI1IzUjMTU2NjQ5NjQwNjYyMg==\\'; nnanon=0d304650-13b4-11ea-b542-23a41990b521; __qca=P0-29952391-1594118770307; nntheme=a11y; _gid=GA1.2.1217256637.1595067687; JSESSIONID=FC85B924EA9BC8B4172A7D7B0AB6A768; webapp-cmse-next=!Bz/qAoh4PAVWfM6/H48idC6JYNNOng3mcN7fKRfCKlfex8XalKNCAx5siZ1VCzcX5UB2QezxYqf6rqnZdGoYFPrQ8Y2Ix160yo2gS3B3MA==; _csrf=zuSi6ub4HT_F_2Sy9OMVvJGD; NEXT=5938adbbf4069248352b7af24167e5c7bf44fdcc; _gat_UA-58430789-7=1';\nmsg.referrer = 'https://www.nordnet.se';\nmsg.referrerPolicy = 'origin';\nmsg.body = null;\nmsg.mode = 'cors';\n\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 420,
        "wires": [
            [
                "d8101edbc2ad8130"
            ]
        ]
    },
    {
        "id": "d8101edbc2ad8130",
        "type": "http request",
        "z": "e6e24a9ec0db5bf1",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 470,
        "y": 420,
        "wires": [
            [
                "564972b24b6b5315"
            ]
        ]
    },
    {
        "id": "ac1b7108af29f8c1",
        "type": "function",
        "z": "e6e24a9ec0db5bf1",
        "name": "Loop extract share info",
        "func": "var share_info = [];\nvar share_id = msg.payload.instrument_info.instrument_id;\nvar share_name = msg.payload.instrument_info.name;\nvar share_isin = msg.payload.instrument_info.isin;\nvar share_instrument_group_type = msg.payload.instrument_info.instrument_group_type;\nvar share_instrument_type = msg.payload.instrument_info.instrument_type;\nvar pe = msg.payload.key_ratios_info.pe;\nvar ps = msg.payload.key_ratios_info.ps;\nvar eps = msg.payload.key_ratios_info.eps;\nvar pb = msg.payload.key_ratios_info.pb;\nvar div_per_share = msg.payload.key_ratios_info.dividend_per_share;\nvar div_yield = msg.payload.key_ratios_info.dividend_yield;\nvar div_yield_1d = msg.payload.historical_returns_info.yield_1d;\nvar div_yield_1w = msg.payload.historical_returns_info.yield_1w;\nvar div_yield_1m = msg.payload.historical_returns_info.yield_1m;\nvar div_yield_3m = msg.payload.historical_returns_info.yield_3m;\nvar exchange_country = msg.payload.exchange_info.exchange_country;\nvar exchange_name = msg.payload.exchange_info.exchanges[0];\nvar exchange_list = msg.payload.exchange_info.exchanges[1];\n\n\nshare_info.push(share_id, share_isin, share_name, share_instrument_group_type, share_instrument_type, pe, ps, eps, pb, div_per_share, div_yield, div_yield_1d, div_yield_1w, div_yield_1m, div_yield_3m, exchange_country, exchange_name, exchange_list);\n\nmsg.payload = share_info;\nmsg.id = share_id;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 560,
        "wires": [
            [
                "420f19f40d8d1bd3",
                "8c1d4ea4e5bfe32f",
                "b301df37f6c7e4a1"
            ]
        ]
    },
    {
        "id": "420f19f40d8d1bd3",
        "type": "csv",
        "z": "e6e24a9ec0db5bf1",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "",
        "skip": "0",
        "strings": false,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 510,
        "y": 560,
        "wires": [
            [
                "c3351a30015d7a5b"
            ]
        ]
    },
    {
        "id": "c3351a30015d7a5b",
        "type": "file",
        "z": "e6e24a9ec0db5bf1",
        "name": "Write",
        "filename": "C:\\mano\\NodeRed\\shares.txt",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 650,
        "y": 560,
        "wires": [
            [
                "3f01c17b19b04982"
            ]
        ]
    },
    {
        "id": "a09bf35dec05f9cc",
        "type": "split",
        "z": "e6e24a9ec0db5bf1",
        "name": "Split",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": true,
        "addname": "",
        "x": 130,
        "y": 560,
        "wires": [
            [
                "ac1b7108af29f8c1"
            ]
        ]
    },
    {
        "id": "564972b24b6b5315",
        "type": "function",
        "z": "e6e24a9ec0db5bf1",
        "name": "Extract payload array",
        "func": "var data = msg.payload.results;\n\nmsg.payload = data;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 420,
        "wires": [
            [
                "a09bf35dec05f9cc"
            ]
        ]
    },
    {
        "id": "eb359d44aa2b1d46",
        "type": "delay",
        "z": "e6e24a9ec0db5bf1",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 960,
        "y": 400,
        "wires": [
            [
                "0812bf10baa7f0d9"
            ]
        ]
    },
    {
        "id": "bc8c52b5407337db",
        "type": "function",
        "z": "e6e24a9ec0db5bf1",
        "name": "Get msgid",
        "func": "var msgid = flow.get('_msgid');\nmsg._msgid = msgid; \nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 560,
        "wires": [
            [
                "eb359d44aa2b1d46"
            ]
        ]
    },
    {
        "id": "3f01c17b19b04982",
        "type": "join",
        "z": "e6e24a9ec0db5bf1",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 790,
        "y": 560,
        "wires": [
            [
                "bc8c52b5407337db"
            ]
        ]
    },
    {
        "id": "2d4be9bdc07ea45c",
        "type": "function",
        "z": "e6e24a9ec0db5bf1",
        "name": "Store msgid",
        "func": "\nvar msgid = msg._msgid;\nflow.set('_msgid', msgid);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 130,
        "y": 420,
        "wires": [
            [
                "9176a32694386490"
            ]
        ]
    },
    {
        "id": "8c1d4ea4e5bfe32f",
        "type": "function",
        "z": "e6e24a9ec0db5bf1",
        "name": "Prepare",
        "func": "var next = flow.get('next');\nvar csrf = flow.get('csrf');\n\nmsg.method = \"GET\"\nmsg.url = \"https://api.prod.nntech.io/instrument/v2/widget/dividends/\" + msg.id; \nmsg.headers = {};\nmsg.headers['sec-ch-ua'] = \"\\\"Chromium\\\";v=\\\"118\\\", \\\"Google Chrome\\\";v=\\\"118\\\", \\\"Not=A?Brand\\\";v=\\\"99\\\"\" \nmsg.headers['sec-ch-ua-mobile'] = \"?0\";\nmsg.headers['sec-ch-ua-platform'] = \"\\\"Windows\\\"\";\nmsg.headers['x-locale'] = \"sv-SE\";\nmsg.referrer = 'https://www.nordnet.se';\nmsg.referrerPolicy = 'origin';\nmsg.body = null;\n\nreturn msg;\n\n/*\nfetch(\"https://api.prod.nntech.io/instrument/v2/widget/dividends/16377849\", {\n  \"headers\": {\n    \"sec-ch-ua\": \"\\\"Chromium\\\";v=\\\"118\\\", \\\"Google Chrome\\\";v=\\\"118\\\", \\\"Not=A?Brand\\\";v=\\\"99\\\"\",\n    \"sec-ch-ua-mobile\": \"?0\",\n    \"sec-ch-ua-platform\": \"\\\"Windows\\\"\",\n    \"x-locale\": \"sv-SE\",\n    \"Referer\": \"https://www.nordnet.se/\",\n    \"Referrer-Policy\": \"origin\"\n  },\n  \"body\": null,\n  \"method\": \"GET\"\n});\n*/",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 660,
        "wires": [
            [
                "e1f1e3573b1c5578"
            ]
        ]
    },
    {
        "id": "e1f1e3573b1c5578",
        "type": "http request",
        "z": "e6e24a9ec0db5bf1",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 530,
        "y": 660,
        "wires": [
            [
                "5f0159557414fcae"
            ]
        ]
    },
    {
        "id": "5f0159557414fcae",
        "type": "function",
        "z": "e6e24a9ec0db5bf1",
        "name": "Extract payload array",
        "func": "var data = msg.payload.past;\n\nmsg.payload = data;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 660,
        "wires": [
            [
                "532df6f23418a21b"
            ]
        ]
    },
    {
        "id": "532df6f23418a21b",
        "type": "split",
        "z": "e6e24a9ec0db5bf1",
        "name": "Split",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": true,
        "addname": "",
        "x": 350,
        "y": 820,
        "wires": [
            [
                "560c3bea723a3c2e"
            ]
        ]
    },
    {
        "id": "560c3bea723a3c2e",
        "type": "function",
        "z": "e6e24a9ec0db5bf1",
        "name": "Extract dividends info",
        "func": "var dividends_info = [];\nvar id = msg.id;\nvar div_amount = msg.payload.amount.value;\nvar div_record_date = msg.payload.recordDate;\nvar div_x_date = msg.payload.xday;\n\ndividends_info.push(id, div_amount, div_record_date, div_x_date);\n\nmsg.payload = dividends_info;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 820,
        "wires": [
            [
                "c3e99053e7fd1f12"
            ]
        ]
    },
    {
        "id": "c3e99053e7fd1f12",
        "type": "csv",
        "z": "e6e24a9ec0db5bf1",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "",
        "skip": "0",
        "strings": false,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 730,
        "y": 820,
        "wires": [
            [
                "30ffd092e1419f2f"
            ]
        ]
    },
    {
        "id": "30ffd092e1419f2f",
        "type": "file",
        "z": "e6e24a9ec0db5bf1",
        "name": "Write",
        "filename": "C:\\mano\\NodeRed\\dividends.txt",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 870,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "352772d2ad25dd3e",
        "type": "comment",
        "z": "e6e24a9ec0db5bf1",
        "name": "Fix valid session to use",
        "info": "",
        "x": 120,
        "y": 60,
        "wires": []
    },
    {
        "id": "a9541f5a333c1e3b",
        "type": "comment",
        "z": "e6e24a9ec0db5bf1",
        "name": "Create result files with headers",
        "info": "",
        "x": 150,
        "y": 160,
        "wires": []
    },
    {
        "id": "fd35c8580d3d2151",
        "type": "comment",
        "z": "e6e24a9ec0db5bf1",
        "name": "Figure out number of share iterations needed",
        "info": "",
        "x": 190,
        "y": 260,
        "wires": []
    },
    {
        "id": "340f59d1fc785b6f",
        "type": "comment",
        "z": "e6e24a9ec0db5bf1",
        "name": "Loop 100 shares per iteration",
        "info": "",
        "x": 140,
        "y": 340,
        "wires": []
    },
    {
        "id": "a74ad9f5762ec1e6",
        "type": "comment",
        "z": "e6e24a9ec0db5bf1",
        "name": "Split result into 100 parts",
        "info": "",
        "x": 150,
        "y": 480,
        "wires": []
    },
    {
        "id": "42f0e1abc4b42619",
        "type": "comment",
        "z": "e6e24a9ec0db5bf1",
        "name": "Query dividens for each share",
        "info": "",
        "x": 140,
        "y": 620,
        "wires": []
    },
    {
        "id": "f0990c9412525257",
        "type": "comment",
        "z": "e6e24a9ec0db5bf1",
        "name": "Split result into one message per dividend for that share",
        "info": "",
        "x": 220,
        "y": 720,
        "wires": []
    },
    {
        "id": "bfca8d4a71f9ca75",
        "type": "comment",
        "z": "e6e24a9ec0db5bf1",
        "name": "Query sector",
        "info": "",
        "x": 110,
        "y": 920,
        "wires": []
    },
    {
        "id": "b301df37f6c7e4a1",
        "type": "function",
        "z": "e6e24a9ec0db5bf1",
        "name": "Prepare",
        "func": "var next = flow.get('next');\nvar csrf = flow.get('csrf');\n\nmsg.method = \"GET\"\nmsg.url = \"https://api.prod.nntech.io/instrument/v1/fundamentals/\" + msg.id; \nmsg.headers = {};\nmsg.headers['accept'] = \"*/* \"\nmsg.headers['accept-language'] = \"en-US,en;q=0.9\"\nmsg.headers['sec-ch-ua'] = \"\\\"Chromium\\\";v=\\\"118\\\", \\\"Google Chrome\\\";v=\\\"118\\\", \\\"Not=A?Brand\\\";v=\\\"99\\\"\" \nmsg.headers['sec-ch-ua-mobile'] = \"?0\";\nmsg.headers['sec-ch-ua-platform'] = \"\\\"Windows\\\"\";\nmsg.headers['sec-fetch-dest'] = \"empty\"\nmsg.headers['sec-fetch-mode'] = \"cors\";\nmsg.headers['sec-fetch-site'] = \"cross-site\";\nmsg.headers['x-locale'] = \"sv-SE\";\nmsg.referrer = 'https://www.nordnet.se';\nmsg.referrerPolicy = 'origin';\nmsg.body = null;\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 940,
        "wires": [
            [
                "1cfae1db51c78713"
            ]
        ]
    },
    {
        "id": "1cfae1db51c78713",
        "type": "http request",
        "z": "e6e24a9ec0db5bf1",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 490,
        "y": 940,
        "wires": [
            [
                "acb8da03e5e97ede"
            ]
        ]
    },
    {
        "id": "acb8da03e5e97ede",
        "type": "function",
        "z": "e6e24a9ec0db5bf1",
        "name": "Extract sector info",
        "func": "var sector_info = [];\nvar id = msg.id;\nvar sectorL1 = msg.payload.company.sectorL1;\nvar sectorL2 = msg.payload.company.sectorL2;\nvar sectorL3 = msg.payload.company.sectorL3;\n\nsector_info.push(id, sectorL1, sectorL2, sectorL3);\n\nmsg.payload = sector_info;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 940,
        "wires": [
            [
                "91c3276bbaac097a"
            ]
        ]
    },
    {
        "id": "91c3276bbaac097a",
        "type": "csv",
        "z": "e6e24a9ec0db5bf1",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "",
        "skip": "0",
        "strings": false,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 890,
        "y": 940,
        "wires": [
            [
                "24fef0cf6d8d5af0"
            ]
        ]
    },
    {
        "id": "24fef0cf6d8d5af0",
        "type": "file",
        "z": "e6e24a9ec0db5bf1",
        "name": "Write",
        "filename": "C:\\mano\\NodeRed\\sectors.txt",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1030,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "5983af4dca6934a4",
        "type": "inject",
        "z": "b6b3133e4b13c3d6",
        "name": "Get next and csrf",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "30 09 * * 6",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 350,
        "y": 40,
        "wires": [
            [
                "46c346f00e928c37"
            ]
        ]
    },
    {
        "id": "46c346f00e928c37",
        "type": "function",
        "z": "b6b3133e4b13c3d6",
        "name": "Prepare",
        "func": "var now = new Date();\nflow.set('created', now); \n\nmsg.method = \"GET\"\nmsg.url = \"https://www.nordnet.se\";\nmsg.headers = {};\nmsg.headers['Connection'] = 'keep-alive';\nmsg.headers['Content-Length'] = '0';\nmsg.headers['Pragma'] = 'no-cache';\nmsg.headers['Cache-Control'] = 'no-cache';\nmsg.headers['Origin'] = 'https://www.nordnet.se';\nmsg.headers['User-Agent'] = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.117 Safari/537.36';\nmsg.headers['ntag'] = 'NO_NTAG_RECEIVED_YET';\nmsg.headers['content-type'] = 'application/x-www-form-urlencoded'; \nmsg.headers['Accept'] = 'application/json';\nmsg.headers['client-id'] = 'NEXT';\nmsg.headers['DNT'] = '1';\nmsg.headers['Sec-Fetch-Site'] = 'same-origin';\nmsg.headers['Sec-Fetch-Mode'] = 'cors';\nmsg.headers['Referer'] = 'https://www.nordnet.se/se';\nmsg.headers['Accept-Encoding'] = 'gzip, deflate, br';\nmsg.headers['Accept-Language'] = 'en-US,en;q=0.9,sv;q=0.8,da;q=0.7';\n\nvar msg1 = {};\nmsg1.source = 'Nordnet';\nmsg1.created = now;\n\nreturn [msg1, msg];\n\n\n\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 80,
        "wires": [
            [
                "4b7e2842650dd675"
            ],
            [
                "887dcb20df397b35"
            ]
        ]
    },
    {
        "id": "887dcb20df397b35",
        "type": "http request",
        "z": "b6b3133e4b13c3d6",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 790,
        "y": 120,
        "wires": [
            [
                "25c7b6fb242a4da2"
            ]
        ]
    },
    {
        "id": "25c7b6fb242a4da2",
        "type": "function",
        "z": "b6b3133e4b13c3d6",
        "name": "Set next and csrf",
        "func": "var NewMsg = {};\n\nvar header = msg.headers[\"set-cookie\"][0];\nvar header2 = JSON.stringify(header);\n\nvar csrf = header2.split(';'[1]);\nvar csrf2 = JSON.stringify(csrf);\n\nvar csrf3 = msg.responseCookies._csrf.value;\nNewMsg.csrf = csrf3;\nflow.set('csrf', csrf3);\n\nvar next = msg.redirectList[0].cookies.NEXT.value;\nNewMsg.next = next;\nflow.set('next', next);\n\nreturn NewMsg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 120,
        "wires": [
            [
                "e98ae9e731b5be13"
            ]
        ]
    },
    {
        "id": "1a6f22dae2898b9d",
        "type": "comment",
        "z": "b6b3133e4b13c3d6",
        "name": "Fix valid session to use",
        "info": "",
        "x": 120,
        "y": 40,
        "wires": []
    },
    {
        "id": "e98ae9e731b5be13",
        "type": "function",
        "z": "b6b3133e4b13c3d6",
        "name": "Prepare",
        "func": "var next = flow.get('next');\nvar csrf = flow.get('csrf');\n\nmsg.method = \"GET\"\nmsg.url = \"https://www.nordnet.se/api/2/instrument_search/query/fundlist?sort_attribute=yield_1y&sort_order=desc&limit=50&offset=0&free_text_search=\"; \nmsg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nmsg.headers['Accept-Language'] = 'en-US,en;q=0.9,sv;q=0.8,da;q=0.7';\nmsg.headers['client-id'] = 'NEXT';\nmsg.headers['ntag'] = '68524b90-39f0-448d-ba6f-2ff921ec7de1';\nmsg.headers['sec-fetch-dest'] = 'empth';\nmsg.headers['sec-fetch-mode'] = 'cors';\nmsg.headers['sec-fetch-site'] = 'same-origin';\nmsg.headers['x-nn-href'] = 'https://www.nordnet.se/marknaden/fondlistor';\nmsg.headers['cookie'] = 'lang=sv; NEXT=' + next + '; csrf=' + csrf + ';_ga=GA1.2.2043169788.1522314173; accepted_cookies=1; coid=1073550482; sv-uts=\\'NTI1YWIzMDAtOGMzMi0xMWU5LWE5OWMtMDA1MDU2YjcwMGI1IzUjMTU2NjQ5NjQwNjYyMg==\\'; nnanon=0d304650-13b4-11ea-b542-23a41990b521; __qca=P0-29952391-1594118770307; nntheme=a11y; _gid=GA1.2.1217256637.1595067687; JSESSIONID=FC85B924EA9BC8B4172A7D7B0AB6A768; webapp-cmse-next=!Bz/qAoh4PAVWfM6/H48idC6JYNNOng3mcN7fKRfCKlfex8XalKNCAx5siZ1VCzcX5UB2QezxYqf6rqnZdGoYFPrQ8Y2Ix160yo2gS3B3MA==; _csrf=zuSi6ub4HT_F_2Sy9OMVvJGD; NEXT=5938adbbf4069248352b7af24167e5c7bf44fdcc; _gat_UA-58430789-7=1';\nmsg.referrer = 'https://www.nordnet.se';\nmsg.referrerPolicy = 'origin';\nmsg.body = null;\nmsg.mode = 'cors';\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 180,
        "wires": [
            [
                "fe69255c65f819be"
            ]
        ]
    },
    {
        "id": "fe69255c65f819be",
        "type": "http request",
        "z": "b6b3133e4b13c3d6",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 710,
        "y": 180,
        "wires": [
            [
                "f73893752ae547ba"
            ]
        ]
    },
    {
        "id": "f73893752ae547ba",
        "type": "function",
        "z": "b6b3133e4b13c3d6",
        "name": "Extract total number of funds",
        "func": "var no_funds = msg.payload.total_hits / 50; \n//var no_funds = 1;\nmsg.count = Math.ceil(no_funds);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 180,
        "wires": [
            [
                "d491061bbf80fd30"
            ]
        ]
    },
    {
        "id": "67663585aa840a73",
        "type": "comment",
        "z": "b6b3133e4b13c3d6",
        "name": "Figure out number of fund iterations needed",
        "info": "",
        "x": 190,
        "y": 160,
        "wires": []
    },
    {
        "id": "d491061bbf80fd30",
        "type": "loop",
        "z": "b6b3133e4b13c3d6",
        "name": "Outer loop",
        "kind": "fcnt",
        "count": "",
        "initial": "0",
        "step": "1",
        "condition": "",
        "conditionType": "jsonata",
        "when": "before",
        "enumeration": "",
        "enumerationType": "msg",
        "limit": "",
        "loopPayload": "loop-index",
        "finalPayload": "final-count",
        "x": 390,
        "y": 260,
        "wires": [
            [
                "adb75cf69ba80f9e",
                "fe981d125f00c13d"
            ],
            [
                "8c08a6133e0b5de4"
            ]
        ]
    },
    {
        "id": "adb75cf69ba80f9e",
        "type": "debug",
        "z": "b6b3133e4b13c3d6",
        "name": "Done",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 240,
        "wires": []
    },
    {
        "id": "582d82af6ef04991",
        "type": "function",
        "z": "b6b3133e4b13c3d6",
        "name": "Prepare",
        "func": "var next = flow.get('next');\nvar csrf = flow.get('csrf');\n//limit=100\nmsg.method = \"GET\"\nmsg.url = \"https://www.nordnet.se/api/2/instrument_search/query/fundlist?sortField=name&sortOrder=ascending&limit=50&offset=\" + (msg.loop.value * 50);\nmsg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nmsg.headers['Accept-Language'] = 'en-US,en;q=0.9,sv;q=0.8,da;q=0.7';\nmsg.headers['client-id'] = 'NEXT';\nmsg.headers['ntag'] = '68524b90-39f0-448d-ba6f-2ff921ec7de1';\nmsg.headers['sec-fetch-dest'] = 'empth';\nmsg.headers['sec-fetch-mode'] = 'cors';\nmsg.headers['sec-fetch-site'] = 'same-origin';\nmsg.headers['x-nn-href'] = 'https://www.nordnet.se/marknaden/fondlistor?sortField=name&sortOrder=ascending&selectedTab=overview&page=' + msg.loop.value;\nmsg.headers['cookie'] = 'lang=sv; NEXT=' + next + '; csrf=' + csrf + ';_ga=GA1.2.2043169788.1522314173; accepted_cookies=1; coid=1073550482; sv-uts=\\'NTI1YWIzMDAtOGMzMi0xMWU5LWE5OWMtMDA1MDU2YjcwMGI1IzUjMTU2NjQ5NjQwNjYyMg==\\'; nnanon=0d304650-13b4-11ea-b542-23a41990b521; __qca=P0-29952391-1594118770307; nntheme=a11y; _gid=GA1.2.1217256637.1595067687; JSESSIONID=FC85B924EA9BC8B4172A7D7B0AB6A768; webapp-cmse-next=!Bz/qAoh4PAVWfM6/H48idC6JYNNOng3mcN7fKRfCKlfex8XalKNCAx5siZ1VCzcX5UB2QezxYqf6rqnZdGoYFPrQ8Y2Ix160yo2gS3B3MA==; _csrf=zuSi6ub4HT_F_2Sy9OMVvJGD; NEXT=5938adbbf4069248352b7af24167e5c7bf44fdcc; _gat_UA-58430789-7=1';\nmsg.referrer = 'https://www.nordnet.se';\nmsg.referrerPolicy = 'origin';\nmsg.body = null;\nmsg.mode = 'cors';\n\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 340,
        "wires": [
            [
                "bcc8ed226d41f241"
            ]
        ]
    },
    {
        "id": "bcc8ed226d41f241",
        "type": "http request",
        "z": "b6b3133e4b13c3d6",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 490,
        "y": 340,
        "wires": [
            [
                "83ed82c1c9862401"
            ]
        ]
    },
    {
        "id": "5cbb4a6a8089e64d",
        "type": "function",
        "z": "b6b3133e4b13c3d6",
        "name": "Loop extract fund info",
        "func": "var fund_info = [];\nvar fund_development = [];\n\nvar fund_id = msg.payload.instrument_info.instrument_id;\nvar fund_name = msg.payload.instrument_info.name;\nvar fund_isin = msg.payload.instrument_info.isin;\n\nvar fund_category = msg.payload.fund_info.fund_category;\nvar fund_type = msg.payload.fund_info.fund_type;\nvar fund_yearlyfee = msg.payload.fund_info.fund_yearly_fee;\nvar fund_risk_int = msg.payload.fund_info.fund_raw_risk;\nvar fund_risk = msg.payload.fund_info.fund_risk_group;\n\nif ( msg.payload.historical_returns_info.yield_1w != null ) { \n  var fund_w1 =  Number(msg.payload.historical_returns_info.yield_1w.toFixed(2))\n}\n\nif ( msg.payload.historical_returns_info.yield_1m != null ) { \n  var fund_m1 =  Number(msg.payload.historical_returns_info.yield_1m.toFixed(2))\n}\n\nif ( msg.payload.historical_returns_info.yield_3m != null ) { \n  var fund_m3 =  Number(msg.payload.historical_returns_info.yield_3m.toFixed(2))\n}\n\nif ( msg.payload.historical_returns_info.yield_1d != null ) { \n  var fund_d1 =  Number(msg.payload.historical_returns_info.yield_1d.toFixed(2))\n}\n\n\nconst search = ',';\nconst replaceWith = '|';\nconst fund_category2 = fund_category.split(search).join(replaceWith);\n\nvar created = flow.get('created');\n\nfund_info.push(fund_id, fund_isin, fund_name, fund_type, fund_yearlyfee, fund_risk_int, fund_risk, fund_category2, created);\nfund_development.push(fund_id, fund_d1, fund_w1, fund_m1, fund_m3, created);\nvar msg1 = {};\nvar msg2 = {};\n\nmsg1.payload = fund_info;\nmsg1.id = fund_id;\nmsg1.parts = msg.parts;\nmsg2.development = fund_development;\nmsg2.id = fund_id;\n\nreturn [msg1, msg2];\n\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 480,
        "wires": [
            [
                "cdcfaa4deac75f42"
            ],
            [
                "e1c1c38ca2d50efc"
            ]
        ]
    },
    {
        "id": "038ac6c7129fa794",
        "type": "split",
        "z": "b6b3133e4b13c3d6",
        "name": "Split",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": true,
        "addname": "",
        "x": 110,
        "y": 480,
        "wires": [
            [
                "5cbb4a6a8089e64d"
            ]
        ]
    },
    {
        "id": "83ed82c1c9862401",
        "type": "function",
        "z": "b6b3133e4b13c3d6",
        "name": "Extract payload array",
        "func": "var data = msg.payload.results;\n\nmsg.payload = data;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 340,
        "wires": [
            [
                "038ac6c7129fa794"
            ]
        ]
    },
    {
        "id": "e63c9469369ae6e4",
        "type": "delay",
        "z": "b6b3133e4b13c3d6",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 980,
        "y": 320,
        "wires": [
            [
                "d491061bbf80fd30"
            ]
        ]
    },
    {
        "id": "5d267f53ebdb67f2",
        "type": "function",
        "z": "b6b3133e4b13c3d6",
        "name": "Get msgid",
        "func": "var msgid = flow.get('_msgid');\nmsg._msgid = msgid; \nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 480,
        "wires": [
            [
                "e63c9469369ae6e4"
            ]
        ]
    },
    {
        "id": "c04e167e9d444ec7",
        "type": "join",
        "z": "b6b3133e4b13c3d6",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 930,
        "y": 480,
        "wires": [
            [
                "5d267f53ebdb67f2"
            ]
        ]
    },
    {
        "id": "8c08a6133e0b5de4",
        "type": "function",
        "z": "b6b3133e4b13c3d6",
        "name": "Store msgid",
        "func": "\nvar msgid = msg._msgid;\nflow.set('_msgid', msgid);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 340,
        "wires": [
            [
                "582d82af6ef04991"
            ]
        ]
    },
    {
        "id": "e1c1c38ca2d50efc",
        "type": "function",
        "z": "b6b3133e4b13c3d6",
        "name": "Prepare",
        "func": "var next = flow.get('next');\nvar csrf = flow.get('csrf');\n\nmsg.method = \"GET\"\nmsg.url = \"https://api.prod.nntech.io/market-data/price-time-series/v2/period/MONTH_1/identifier/\" + msg.id + \":FUND_SEK?\"; \nmsg.headers = {};\nmsg.headers['sec-ch-ua'] = \"\\\"Chromium\\\";v=\\\"118\\\", \\\"Google Chrome\\\";v=\\\"118\\\", \\\"Not=A?Brand\\\";v=\\\"99\\\"\" \nmsg.headers['sec-ch-ua-mobile'] = \"?0\";\nmsg.headers['sec-ch-ua-platform'] = \"\\\"Windows\\\"\";\nmsg.headers['x-locale'] = \"sv-SE\";\nmsg.referrer = 'https://www.nordnet.se';\nmsg.referrerPolicy = 'origin';\nmsg.body = null;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 580,
        "wires": [
            [
                "7f950544155ea34a"
            ]
        ]
    },
    {
        "id": "7f950544155ea34a",
        "type": "http request",
        "z": "b6b3133e4b13c3d6",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 550,
        "y": 580,
        "wires": [
            [
                "5b6958bf1e0745d0"
            ]
        ]
    },
    {
        "id": "5b6958bf1e0745d0",
        "type": "function",
        "z": "b6b3133e4b13c3d6",
        "name": "Extract 2weeks info",
        "func": "var created = flow.get('created');\nvar TargetDates = [];\nvar last = new Date(new Date().setDate(new Date().getDate() - 2)).toDateString();\nvar Min14 = new Date(new Date().setDate(new Date().getDate() - 16)).toDateString();\n\nTargetDates.push(last, Min14);\n\nvar ResultArray = [];\nif (msg.payload.pricePoints.length > 14) {\n    for (let i = 0; i < msg.payload.pricePoints.length; i++) {\n        var asdate = new Date(msg.payload.pricePoints[i].timeStamp).toDateString();\n        var value = msg.payload.pricePoints[i].value;\n        ResultArray.push([asdate, value]);\n    }\n\n//remove all dates we are not interested in\n    var ResultArray2 = ResultArray.filter(item => TargetDates.includes(item[0]));\n\n//Calculate result for periods\n    if (ResultArray2.length = 2) {\n        var w2 = Number((ResultArray2[1][1] - ResultArray2[0][1]).toFixed(2));\n        msg.development.push(w2);\n    } \n} else {\n    msg.development.push(null);\n}\n\nreturn msg;\n/////////////////////\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 580,
        "wires": [
            [
                "14b45f9176264fed"
            ]
        ]
    },
    {
        "id": "32ac5d6b760c6bfd",
        "type": "comment",
        "z": "b6b3133e4b13c3d6",
        "name": "Loop 100 shares per iteration",
        "info": "",
        "x": 160,
        "y": 260,
        "wires": []
    },
    {
        "id": "47ef01bdbd4a25c7",
        "type": "comment",
        "z": "b6b3133e4b13c3d6",
        "name": "Split result into 100 parts (one part per fund)",
        "info": "",
        "x": 230,
        "y": 400,
        "wires": []
    },
    {
        "id": "43a318d6e812fdba",
        "type": "comment",
        "z": "b6b3133e4b13c3d6",
        "name": "Query 2 week result for each fund",
        "info": "",
        "x": 170,
        "y": 540,
        "wires": []
    },
    {
        "id": "21c85ac15f9e87d4",
        "type": "mysql",
        "z": "b6b3133e4b13c3d6",
        "mydb": "c09f346ae50d8da3",
        "name": "Store General",
        "x": 760,
        "y": 480,
        "wires": [
            [
                "c04e167e9d444ec7"
            ]
        ]
    },
    {
        "id": "cdcfaa4deac75f42",
        "type": "sqlstring-format",
        "z": "b6b3133e4b13c3d6",
        "name": "Build query",
        "query": "INSERT INTO \nGeneral (source, id, isin, name, type, fee, risk, category, created ) \nVALUES ('Nordnet', ?, ?, ?, ?, ?, ?, ?, ?);\n",
        "vars": "payload[0],payload[1],payload[2],payload[3],payload[4],payload[5],payload[7],payload[8]",
        "outField": "topic",
        "x": 550,
        "y": 480,
        "wires": [
            [
                "21c85ac15f9e87d4"
            ]
        ]
    },
    {
        "id": "14b45f9176264fed",
        "type": "sqlstring-format",
        "z": "b6b3133e4b13c3d6",
        "name": "Build query",
        "query": "INSERT INTO \nDevelopment (source, id, 1d, 1w, 1m, 3m, created, 2w ) \nVALUES ('Nordnet', ?, ?, ?, ?, ?, ?, ?);\n",
        "vars": "development[0],development[1],development[2],development[3],development[4],development[5],development[6]",
        "outField": "topic",
        "x": 970,
        "y": 580,
        "wires": [
            [
                "d7e20a5f71b712ed"
            ]
        ]
    },
    {
        "id": "d7e20a5f71b712ed",
        "type": "mysql",
        "z": "b6b3133e4b13c3d6",
        "mydb": "c09f346ae50d8da3",
        "name": "Store Development",
        "x": 1170,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "20355efdc0b7d64d",
        "type": "comment",
        "z": "b6b3133e4b13c3d6",
        "name": "Query 3 get index funds",
        "info": "",
        "x": 140,
        "y": 680,
        "wires": []
    },
    {
        "id": "a429421f4123297d",
        "type": "function",
        "z": "b6b3133e4b13c3d6",
        "name": "Prepare",
        "func": "var next = flow.get('next');\nvar csrf = flow.get('csrf');\n//limit=100\nmsg.method = \"GET\"\nmsg.url = \"https://www.nordnet.se/api/2/instrument_search/query/fundlist?apply_filters=fund_type%3DINDEX&sortField=name&sortOrder=ascending&limit=50&offset=\" + (msg.loop.value * 50);\nmsg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nmsg.headers['Accept-Language'] = 'en-US,en;q=0.9,sv;q=0.8,da;q=0.7';\nmsg.headers['client-id'] = 'NEXT';\nmsg.headers['ntag'] = '68524b90-39f0-448d-ba6f-2ff921ec7de1';\nmsg.headers['sec-fetch-dest'] = 'empth';\nmsg.headers['sec-fetch-mode'] = 'cors';\nmsg.headers['sec-fetch-site'] = 'same-origin';\nmsg.headers['x-nn-href'] = 'https://www.nordnet.se/marknaden/fondlistor?sortField=name&sortOrder=ascending&selectedTab=overview&fundType=INDEX&page=' + msg.loop.value;\nmsg.headers['cookie'] = 'lang=sv; NEXT=' + next + '; csrf=' + csrf + ';_ga=GA1.2.2043169788.1522314173; accepted_cookies=1; coid=1073550482; sv-uts=\\'NTI1YWIzMDAtOGMzMi0xMWU5LWE5OWMtMDA1MDU2YjcwMGI1IzUjMTU2NjQ5NjQwNjYyMg==\\'; nnanon=0d304650-13b4-11ea-b542-23a41990b521; __qca=P0-29952391-1594118770307; nntheme=a11y; _gid=GA1.2.1217256637.1595067687; JSESSIONID=FC85B924EA9BC8B4172A7D7B0AB6A768; webapp-cmse-next=!Bz/qAoh4PAVWfM6/H48idC6JYNNOng3mcN7fKRfCKlfex8XalKNCAx5siZ1VCzcX5UB2QezxYqf6rqnZdGoYFPrQ8Y2Ix160yo2gS3B3MA==; _csrf=zuSi6ub4HT_F_2Sy9OMVvJGD; NEXT=5938adbbf4069248352b7af24167e5c7bf44fdcc; _gat_UA-58430789-7=1';\nmsg.referrer = 'https://www.nordnet.se';\nmsg.referrerPolicy = 'origin';\nmsg.body = null;\nmsg.mode = 'cors';\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 920,
        "wires": [
            [
                "5309c2084ec33ffd"
            ]
        ]
    },
    {
        "id": "5309c2084ec33ffd",
        "type": "http request",
        "z": "b6b3133e4b13c3d6",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 490,
        "y": 920,
        "wires": [
            [
                "1f1616bdb3a297ba"
            ]
        ]
    },
    {
        "id": "1f1616bdb3a297ba",
        "type": "function",
        "z": "b6b3133e4b13c3d6",
        "name": "Extract payload array",
        "func": "var data = msg.payload.results;\n\nmsg.payload = data;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 920,
        "wires": [
            [
                "fff3d4a7673d7699"
            ]
        ]
    },
    {
        "id": "fff3d4a7673d7699",
        "type": "split",
        "z": "b6b3133e4b13c3d6",
        "name": "Split",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": true,
        "addname": "",
        "x": 130,
        "y": 980,
        "wires": [
            [
                "373d8b7570580a49"
            ]
        ]
    },
    {
        "id": "373d8b7570580a49",
        "type": "function",
        "z": "b6b3133e4b13c3d6",
        "name": "Loop extract fund info",
        "func": "var fund_id = msg.payload.instrument_info.instrument_id;\n\nvar created = flow.get('created');\n\nmsg.id = fund_id;\nmsg.created = created;\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 980,
        "wires": [
            [
                "0cefbca32ed13b50"
            ]
        ]
    },
    {
        "id": "0cefbca32ed13b50",
        "type": "sqlstring-format",
        "z": "b6b3133e4b13c3d6",
        "name": "Build query",
        "query": "INSERT INTO \nIndexFund (source, id, created ) \nVALUES ('Nordnet', ?, ?);\n",
        "vars": "id, created",
        "outField": "topic",
        "x": 530,
        "y": 980,
        "wires": [
            [
                "683c5799b7d58e65"
            ]
        ]
    },
    {
        "id": "683c5799b7d58e65",
        "type": "mysql",
        "z": "b6b3133e4b13c3d6",
        "mydb": "c09f346ae50d8da3",
        "name": "Store Index fund",
        "x": 720,
        "y": 980,
        "wires": [
            [
                "8a7b4d01017c9cd6"
            ]
        ]
    },
    {
        "id": "fe981d125f00c13d",
        "type": "function",
        "z": "b6b3133e4b13c3d6",
        "name": "Prepare",
        "func": "var next = flow.get('next');\nvar csrf = flow.get('csrf');\n\nmsg.method = \"GET\"\nmsg.url = \"https://www.nordnet.se/api/2/instrument_search/query/fundlist?apply_filters=fund_type%3DINDEX&sort_attribute=yield_1y&sort_order=desc\"; \nmsg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nmsg.headers['Accept-Language'] = 'en-US,en;q=0.9,sv;q=0.8,da;q=0.7';\nmsg.headers['client-id'] = 'NEXT';\nmsg.headers['ntag'] = '68524b90-39f0-448d-ba6f-2ff921ec7de1';\nmsg.headers['sec-fetch-dest'] = 'empth';\nmsg.headers['sec-fetch-mode'] = 'cors';\nmsg.headers['sec-fetch-site'] = 'same-origin';\nmsg.headers['x-nn-href'] = 'https://www.nordnet.se/marknaden/fondlistor?sortField=name&sortOrder=ascending&selectedTab=overview';\nmsg.headers['cookie'] = 'lang=sv; NEXT=' + next + '; csrf=' + csrf + ';_ga=GA1.2.2043169788.1522314173; accepted_cookies=1; coid=1073550482; sv-uts=\\'NTI1YWIzMDAtOGMzMi0xMWU5LWE5OWMtMDA1MDU2YjcwMGI1IzUjMTU2NjQ5NjQwNjYyMg==\\'; nnanon=0d304650-13b4-11ea-b542-23a41990b521; __qca=P0-29952391-1594118770307; nntheme=a11y; _gid=GA1.2.1217256637.1595067687; JSESSIONID=FC85B924EA9BC8B4172A7D7B0AB6A768; webapp-cmse-next=!Bz/qAoh4PAVWfM6/H48idC6JYNNOng3mcN7fKRfCKlfex8XalKNCAx5siZ1VCzcX5UB2QezxYqf6rqnZdGoYFPrQ8Y2Ix160yo2gS3B3MA==; _csrf=zuSi6ub4HT_F_2Sy9OMVvJGD; NEXT=5938adbbf4069248352b7af24167e5c7bf44fdcc; _gat_UA-58430789-7=1';\nmsg.referrer = 'https://www.nordnet.se';\nmsg.referrerPolicy = 'origin';\nmsg.body = null;\nmsg.mode = 'cors';\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 760,
        "wires": [
            [
                "c4296fb8440168fc"
            ]
        ]
    },
    {
        "id": "c4296fb8440168fc",
        "type": "http request",
        "z": "b6b3133e4b13c3d6",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 550,
        "y": 760,
        "wires": [
            [
                "8d1cc0165b886fb5"
            ]
        ]
    },
    {
        "id": "8d1cc0165b886fb5",
        "type": "function",
        "z": "b6b3133e4b13c3d6",
        "name": "Extract total number of index funds",
        "func": "\nvar no_index_funds = msg.payload.total_hits / 50; \n//var no_index_funds = 1;\nmsg.count = Math.ceil(no_index_funds);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 760,
        "wires": [
            [
                "884115df7ed604b9"
            ]
        ]
    },
    {
        "id": "884115df7ed604b9",
        "type": "loop",
        "z": "b6b3133e4b13c3d6",
        "name": "Outer loop",
        "kind": "fcnt",
        "count": "",
        "initial": "0",
        "step": "1",
        "condition": "",
        "conditionType": "jsonata",
        "when": "before",
        "enumeration": "",
        "enumerationType": "msg",
        "limit": "",
        "loopPayload": "loop-index",
        "finalPayload": "final-count",
        "x": 291.33331298828125,
        "y": 822.3333129882812,
        "wires": [
            [
                "5f2b23f5201c5660"
            ],
            [
                "2398aae5402bd690"
            ]
        ]
    },
    {
        "id": "2398aae5402bd690",
        "type": "function",
        "z": "b6b3133e4b13c3d6",
        "name": "Store msgid",
        "func": "\nvar msgid = msg._msgid;\nflow.set('_msgid_index', msgid);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 130,
        "y": 920,
        "wires": [
            [
                "a429421f4123297d"
            ]
        ]
    },
    {
        "id": "5f2b23f5201c5660",
        "type": "debug",
        "z": "b6b3133e4b13c3d6",
        "name": "Done index",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 820,
        "wires": []
    },
    {
        "id": "9e6df7a2e7ca7cf4",
        "type": "function",
        "z": "b6b3133e4b13c3d6",
        "name": "Get msgid",
        "func": "var msgid = flow.get('_msgid_index');\nmsg._msgid = msgid; \nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 980,
        "wires": [
            [
                "223a22089f566973"
            ]
        ]
    },
    {
        "id": "8a7b4d01017c9cd6",
        "type": "join",
        "z": "b6b3133e4b13c3d6",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 890,
        "y": 980,
        "wires": [
            [
                "9e6df7a2e7ca7cf4"
            ]
        ]
    },
    {
        "id": "223a22089f566973",
        "type": "delay",
        "z": "b6b3133e4b13c3d6",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 980,
        "y": 900,
        "wires": [
            [
                "884115df7ed604b9"
            ]
        ]
    },
    {
        "id": "66f065dbebf7607e",
        "type": "debug",
        "z": "b6b3133e4b13c3d6",
        "name": "debug 17",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 40,
        "wires": []
    },
    {
        "id": "33d42d4aba60a1a0",
        "type": "catch",
        "z": "b6b3133e4b13c3d6",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 700,
        "y": 40,
        "wires": [
            [
                "66f065dbebf7607e"
            ]
        ]
    },
    {
        "id": "4b7e2842650dd675",
        "type": "sqlstring-format",
        "z": "b6b3133e4b13c3d6",
        "name": "Build query",
        "query": "INSERT INTO \nRuns (source, created) \nVALUES (?, ?);\n",
        "vars": "source, created",
        "outField": "topic",
        "x": 770,
        "y": 80,
        "wires": [
            [
                "5e36ac21b838edd5"
            ]
        ]
    },
    {
        "id": "5e36ac21b838edd5",
        "type": "mysql",
        "z": "b6b3133e4b13c3d6",
        "mydb": "c09f346ae50d8da3",
        "name": "Store Runs",
        "x": 950,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "97db8f9cfbf110ed",
        "type": "inject",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Start",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 10 * * 6",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 330,
        "y": 40,
        "wires": [
            [
                "cd9b9b52ed591b2e"
            ]
        ]
    },
    {
        "id": "f99e32a80a33c5a9",
        "type": "comment",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Create result files with headers",
        "info": "",
        "x": 150,
        "y": 100,
        "wires": []
    },
    {
        "id": "cd9b9b52ed591b2e",
        "type": "function",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Prepare",
        "func": "var now = new Date();\nflow.set('created', now); \n\nmsg.method = \"POST\"\nmsg.url = \"https://www.avanza.se/_api/fund-guide/list\"; \nmsg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nmsg.headers['Accept-Language'] = 'en-US,en;q=0.9,sv;q=0.8,da;q=0.7';\nmsg.headers['Content-Type'] = 'application/json;charset=UTF-8';\nmsg.headers['sec-fetch-dest'] = 'empth';\nmsg.headers['sec-fetch-mode'] = 'cors';\nmsg.headers['sec-fetch-site'] = 'same-origin';\nmsg.headers['x-securitytoken'] = '-';\nmsg.headers['cookie'] = '_ga=GA1.2.424461689.1521150369; AZACOOKIEMESSAGE=1; __couid=4e093aa2-15dd-46ca-a994-d100fdeeecbb; _fbp=fb.1.1549137111112.1151006543; AZAHLI=bankId; AZA_ONBOARDING_PERSONAL-MENU-ONBOARDING=true; AZA_ONBOARDING_MY-ECONOMY-ONBOARDING-2019=true; __gads=ID=c6213a5d73ceaf09:T=1583075494:S=ALNI_Mb73WEr_IRAEg6YgmFpL7D95ZkBUQ; _gcl_au=1.1.326852944.1589623979; _gid=GA1.2.444845462.1595943853; AZAPERSISTANCE=0253c8bd2e-1942-40zTzbB06isEzg-FJdNOt_UxskujLI6UQfbGZM4Da8MItrCfLd26Ou2k9vAa58-QQy1eI; JSESSIONID=vodiw1qg1y3mcoklji7m10v4; _gat_UA-1234489-15=1';\nmsg.referrer = 'https://www.avanza.se/fonder/lista.html?sortField=name&sortDirection=ASCENDING';\nmsg.referrerPolicy = 'origin-when-cross-origin';\nmsg.payload = \"{\\\"startIndex\\\":0,\\\"indexFund\\\":false,\\\"sustainabilityProfile\\\":false,\\\"lowCo2\\\":false,\\\"noFossilFuelInvolvement\\\":false,\\\"regionFilter\\\":[],\\\"countryFilter\\\":[],\\\"alignmentFilter\\\":[],\\\"industryFilter\\\":[],\\\"fundTypeFilter\\\":[],\\\"interestTypeFilter\\\":[],\\\"sortField\\\":\\\"developmentOneYear\\\",\\\"sortDirection\\\":\\\"DESCENDING\\\",\\\"name\\\":\\\"\\\",\\\"recommendedHoldingPeriodFilter\\\":[],\\\"companyFilter\\\":[],\\\"productInvolvementsFilter\\\":[],\\\"ratingFilter\\\":[],\\\"sustainabilityRatingFilter\\\":[],\\\"environmentalRatingFilter\\\":[],\\\"socialRatingFilter\\\":[],\\\"governanceRatingFilter\\\":[]}\";\nmsg.mode = 'cors';\n\nvar msg1 = {};\nmsg1.source = 'Avanza';\nmsg1.created = now;\n\nreturn [msg1, msg];\n\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 100,
        "wires": [
            [
                "ecc577ccf11ea70e"
            ],
            [
                "52906dd104d25dba"
            ]
        ]
    },
    {
        "id": "52906dd104d25dba",
        "type": "http request",
        "z": "94e6a2d5fcdd6bfd",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 690,
        "y": 160,
        "wires": [
            [
                "ec4883e4728fded0"
            ]
        ]
    },
    {
        "id": "ec4883e4728fded0",
        "type": "function",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Extract total number of funds",
        "func": "\nvar no_funds = msg.payload.totalNoFunds / 20; \n//var no_funds = 1;\nmsg.count = Math.ceil(no_funds);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 160,
        "wires": [
            [
                "c8239d18a8952496"
            ]
        ]
    },
    {
        "id": "6e4f2d113ff22d1a",
        "type": "comment",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Figure out number of fund iterations needed",
        "info": "",
        "x": 190,
        "y": 160,
        "wires": []
    },
    {
        "id": "c8239d18a8952496",
        "type": "loop",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Outer loop",
        "kind": "fcnt",
        "count": "",
        "initial": "0",
        "step": "1",
        "condition": "",
        "conditionType": "jsonata",
        "when": "before",
        "enumeration": "",
        "enumerationType": "msg",
        "limit": "",
        "loopPayload": "loop-index",
        "finalPayload": "final-count",
        "x": 390,
        "y": 260,
        "wires": [
            [
                "7a2437e1619cf70b",
                "a7af0117dd0a128c"
            ],
            [
                "1114397a87e5402f"
            ]
        ]
    },
    {
        "id": "7a2437e1619cf70b",
        "type": "debug",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Done",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 240,
        "wires": []
    },
    {
        "id": "74d62fcabb28ea48",
        "type": "function",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Prepare",
        "func": "var next = flow.get('next');\nvar csrf = flow.get('csrf');\n\nmsg.method = \"POST\"\nmsg.url = \"https://www.avanza.se/_api/fund-guide/list\";\nmsg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nmsg.headers['Accept-Language'] = 'en-US,en;q=0.9,sv;q=0.8,da;q=0.7';\nmsg.headers['Content-Type'] = 'application/json;charset=UTF-8';\nmsg.headers['sec-fetch-dest'] = 'empth';\nmsg.headers['sec-fetch-mode'] = 'cors';\nmsg.headers['sec-fetch-site'] = 'same-origin';\nmsg.headers['x-securitytoken'] = '-';\nmsg.headers['cookie'] = '_ga=GA1.2.424461689.1521150369; AZACOOKIEMESSAGE=1; __couid=4e093aa2-15dd-46ca-a994-d100fdeeecbb; _fbp=fb.1.1549137111112.1151006543; AZAHLI=bankId; AZA_ONBOARDING_PERSONAL-MENU-ONBOARDING=true; AZA_ONBOARDING_MY-ECONOMY-ONBOARDING-2019=true; __gads=ID=c6213a5d73ceaf09:T=1583075494:S=ALNI_Mb73WEr_IRAEg6YgmFpL7D95ZkBUQ; _gcl_au=1.1.326852944.1589623979; _gid=GA1.2.444845462.1595943853; AZAPERSISTANCE=0253c8bd2e-1942-40zTzbB06isEzg-FJdNOt_UxskujLI6UQfbGZM4Da8MItrCfLd26Ou2k9vAa58-QQy1eI; JSESSIONID=vodiw1qg1y3mcoklji7m10v4; _gat_UA-1234489-15=1';\nmsg.referrer = 'https://www.avanza.se/fonder/lista.html?sortField=name&sortDirection=ASCENDING&selectedTab=overview';\nmsg.referrerPolicy = 'origin-when-cross-origin';\nmsg.payload = \"{\\\"startIndex\\\":\" + msg.loop.value * 20 + \",\\\"indexFund\\\":false,\\\"sustainabilityProfile\\\":false,\\\"lowCo2\\\":false,\\\"noFossilFuelInvolvement\\\":false,\\\"regionFilter\\\":[],\\\"countryFilter\\\":[],\\\"alignmentFilter\\\":[],\\\"industryFilter\\\":[],\\\"fundTypeFilter\\\":[],\\\"interestTypeFilter\\\":[],\\\"sortField\\\":\\\"developmentOneYear\\\",\\\"sortDirection\\\":\\\"DESCENDING\\\",\\\"name\\\":\\\"\\\",\\\"recommendedHoldingPeriodFilter\\\":[],\\\"companyFilter\\\":[],\\\"productInvolvementsFilter\\\":[],\\\"ratingFilter\\\":[],\\\"sustainabilityRatingFilter\\\":[],\\\"environmentalRatingFilter\\\":[],\\\"socialRatingFilter\\\":[],\\\"governanceRatingFilter\\\":[]}\";\nmsg.mode = 'cors';\n\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 340,
        "wires": [
            [
                "f3dd504d80197ee6"
            ]
        ]
    },
    {
        "id": "f3dd504d80197ee6",
        "type": "http request",
        "z": "94e6a2d5fcdd6bfd",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 490,
        "y": 340,
        "wires": [
            [
                "0c680ede3b8c245c"
            ]
        ]
    },
    {
        "id": "0c5e2afedf78c108",
        "type": "function",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Loop extract fund info",
        "func": "var fund_info = [];\nvar fund_development = [];\n//var index_fund = [];\n\nvar fund_id = msg.payload.orderbookId;\nvar fund_name = msg.payload.name;\nvar fund_isin = msg.payload.isin;\nvar fund_category = msg.payload.category;\nvar fund_type = msg.payload.fundType;\nvar fund_totalfee = msg.payload.totalFee;\nvar fund_risk = msg.payload.risk;\n\nif ( msg.payload.developmentOneWeek != null ) { \n  var fund_w1 =  Number(msg.payload.developmentOneWeek.toFixed(2))\n}\n\nif(msg.payload.developmentOneMonth != null) {\n   var fund_m1 =  Number(msg.payload.developmentOneMonth.toFixed(2))\n}\n    \nif(msg.payload.developmentThreeMonths != null) {\n   var fund_m3 = Number(msg.payload.developmentThreeMonths.toFixed(2))\n}\n\nif(msg.payload.developmentOneDay != null) {\n  var fund_d1 =  Number(msg.payload.developmentOneDay.toFixed(2))\n}\n\n\n//var fund_index = msg.payload.indexFund;\n\n//const search = ',';\n//const replaceWith = '|';\n//const fund_category2 = fund_category.split(search).join(replaceWith);\nvar created = flow.get('created');\n\nfund_info.push(fund_id, fund_isin, fund_name, fund_type, fund_totalfee, fund_risk, fund_category, created);\nfund_development.push(fund_id, fund_d1, fund_w1, fund_m1, fund_m3, created);\n//if (fund_index == 'true') {\n//    index_fund.push(fund_id, created)\n//}\n\n\n\nvar msg1 = {};\nvar msg2 = {};\n//var msg3 = {};\n\nmsg1.payload = fund_info;\nmsg1.id = fund_id;\nmsg1.parts = msg.parts;\n\nmsg2.development = fund_development;\nmsg2.id = fund_id;\n\n//msg3.payload = index_fund;\n\n//if (fund_index == 'true') {\n//    return [msg1, msg2, msg3];\n//}\n//else {\nreturn [msg1, msg2];\n//}\n\n\n\n\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 480,
        "wires": [
            [
                "80ae97fb0e3cb8df"
            ],
            [
                "0629355dcc7e5246"
            ]
        ]
    },
    {
        "id": "67adc9f29ee930b8",
        "type": "split",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Split",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": true,
        "addname": "",
        "x": 150,
        "y": 480,
        "wires": [
            [
                "0c5e2afedf78c108"
            ]
        ]
    },
    {
        "id": "0c680ede3b8c245c",
        "type": "function",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Extract payload array",
        "func": "var data = msg.payload.fundListViews;\n\nmsg.payload = data;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 340,
        "wires": [
            [
                "67adc9f29ee930b8"
            ]
        ]
    },
    {
        "id": "635460d6bd3105d2",
        "type": "delay",
        "z": "94e6a2d5fcdd6bfd",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1080,
        "y": 340,
        "wires": [
            [
                "c8239d18a8952496"
            ]
        ]
    },
    {
        "id": "f9e1c0fb3887b7fe",
        "type": "function",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Get msgid",
        "func": "var msgid = flow.get('_msgid');\nmsg._msgid = msgid; \nmsg.payload = {};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 480,
        "wires": [
            [
                "635460d6bd3105d2"
            ]
        ]
    },
    {
        "id": "59f02c1d06900e8c",
        "type": "join",
        "z": "94e6a2d5fcdd6bfd",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1030,
        "y": 480,
        "wires": [
            [
                "f9e1c0fb3887b7fe"
            ]
        ]
    },
    {
        "id": "1114397a87e5402f",
        "type": "function",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Store msgid",
        "func": "\nvar msgid = msg._msgid;\nflow.set('_msgid', msgid);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 340,
        "wires": [
            [
                "74d62fcabb28ea48"
            ]
        ]
    },
    {
        "id": "0629355dcc7e5246",
        "type": "function",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Prepare",
        "func": "\n  //To\n  var now_to = new Date(new Date().setDate(new Date().getDate() - 1));\n  //var now_to = new Date(new Date().setDate(new Date().getDate() - 3));\n  var year_to = now_to.getFullYear();\n  var month_to = (now_to.getMonth() + 1);\n  var monthasstr_to = month_to.toString();\n  var month2_to = monthasstr_to.padStart(2, '0');\n  var day_to = (\"0\" + now_to.getDate()).slice(-2);\n  var To = year_to +'-'+ month2_to +'-'+ day_to;\n\n  var FromInterval = [30]; //15 //3,4,\n  var ToGet = [];\n\n  for (var i = 0; i < FromInterval.length; i++) {\n  //From\n    var interval = FromInterval[i];\n    var now_from = new Date(new Date().setDate(new Date().getDate() - interval));\n    var year_from = now_from.getFullYear();\n    var month_from = (now_from.getMonth() + 1);\n    var monthasstr_from = month_from.toString();\n    var month2_from = monthasstr_from.padStart(2, '0');\n    var day_from = (\"0\" + now_from.getDate()).slice(-2);\n    var From = year_from +'-'+ month2_from +'-'+ day_from;\n    ToGet.push([msg.id, From, To])\n\n  }\n\nmsg.method = \"GET\"\nmsg.url = \"https://www.avanza.se/_api/fund-guide/chart/\" + msg.id + \"/\" + From + \"/\" + To; \nmsg.headers = {};\nmsg.headers['accept'] = \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\"\nmsg.headers['accept-language'] = \"en-US,en;q=0.9,sv;q=0.8,da;q=0.7\";\nmsg.headers['cache-control'] = \"max-age=0\";\nmsg.headers['sec-fetch-dest'] = \"document\";\nmsg.headers['sec-fetch-mode'] = \"navigate\";\nmsg.headers['sec-fetch-site'] = \"none\";\nmsg.headers['sec-fetch-user'] = \"?1\";\nmsg.headers['upgrade-insecure-requests'] = \"1\"; \nmsg.headers['cookie'] = \"_ga=GA1.2.424461689.1521150369; AZACOOKIEMESSAGE=1; __couid=4e093aa2-15dd-46ca-a994-d100fdeeecbb; _fbp=fb.1.1549137111112.1151006543; AZAHLI=bankId; AZA_ONBOARDING_PERSONAL-MENU-ONBOARDING=true; AZA_ONBOARDING_MY-ECONOMY-ONBOARDING-2019=true; __gads=ID=c6213a5d73ceaf09:T=1583075494:S=ALNI_Mb73WEr_IRAEg6YgmFpL7D95ZkBUQ; _gcl_au=1.1.326852944.1589623979; AZAPERSISTANCE=0253c8bd2e-1942-40ntpmfxE1_ERCIujtXymO3cCLV4u67ipcfEYxOWp0HVrCK6wroaW_YTXKcOUljCub60A; JSESSIONID=1gqpio0cdki6n1fcpbreishoyp; _gid=GA1.2.206532994.1596622924\";\nmsg.referrerPolicy = 'no-referrer-when-downgrade';\nmsg.body = null;\nmsg.mode = \"cors\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 580,
        "wires": [
            [
                "6e4f291b0224f0cb"
            ]
        ]
    },
    {
        "id": "6e4f291b0224f0cb",
        "type": "http request",
        "z": "94e6a2d5fcdd6bfd",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 570,
        "y": 580,
        "wires": [
            [
                "85b03032a45f3cef"
            ]
        ]
    },
    {
        "id": "85b03032a45f3cef",
        "type": "function",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Extract 2weeks info",
        "func": "var created = flow.get('created');\n\nvar TargetDates = [];\nvar last = new Date(new Date().setDate(new Date().getDate() - 2)).toDateString(); \n//var last = new Date(new Date().setDate(new Date().getDate() - 3)).toDateString(); USED DURING DEV TO GET DATA ON THAT DAY\nvar Min14 = new Date(new Date().setDate(new Date().getDate() - 16)).toDateString();\n\n\nTargetDates.push(last, Min14);\n\nvar ResultArray = [];\nif (msg.payload.dataSerie.length > 14) {\n    for (let i = 0; i < msg.payload.dataSerie.length; i++) {\n        var asdate = new Date(msg.payload.dataSerie[i].x).toDateString();\n        var value = msg.payload.dataSerie[i].y;\n        ResultArray.push([asdate, value]);\n    }\n//remove all dates we are not interested in\nvar ResultArray2 = ResultArray.filter(item => TargetDates.includes(item[0]));\n\n//Calculate result for periods\n    if (ResultArray2.length = 2) {\n        var w2 = Number((ResultArray2[1][1] - ResultArray2[0][1]).toFixed(2));\n        msg.development.push(w2);\n    }\n} else {\n    msg.development.push(null);\n}\n\nvar msg1 = {};\nmsg1.development = msg.development;\nmsg.ResultArray2 = ResultArray2;\nmsg.ResultArray = ResultArray;\nmsg.TargetDates = TargetDates;\n\nreturn msg1;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 580,
        "wires": [
            [
                "87d64201125cfce4"
            ]
        ]
    },
    {
        "id": "0820456c3bf9486d",
        "type": "comment",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Loop 100 shares per iteration",
        "info": "",
        "x": 160,
        "y": 260,
        "wires": []
    },
    {
        "id": "9ba74f9c27216fc6",
        "type": "comment",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Split result into 100 parts",
        "info": "",
        "x": 170,
        "y": 400,
        "wires": []
    },
    {
        "id": "1d33df55ad159f97",
        "type": "comment",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Query 2 week result for each fund",
        "info": "",
        "x": 170,
        "y": 540,
        "wires": []
    },
    {
        "id": "bc0db2ee4c357555",
        "type": "debug",
        "z": "94e6a2d5fcdd6bfd",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 40,
        "wires": []
    },
    {
        "id": "1c14bae61a1e5f88",
        "type": "mysql",
        "z": "94e6a2d5fcdd6bfd",
        "mydb": "c09f346ae50d8da3",
        "name": "Store General",
        "x": 860,
        "y": 480,
        "wires": [
            [
                "59f02c1d06900e8c"
            ]
        ]
    },
    {
        "id": "80ae97fb0e3cb8df",
        "type": "sqlstring-format",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Build query",
        "query": "INSERT INTO \nGeneral (source, id, isin, name, type, fee, risk, category, created ) \nVALUES ('Avanza', ?, ?, ?, ?, ?, ?, ?, ?);\n",
        "vars": "payload[0],payload[1],payload[2],payload[3],payload[4],payload[5],payload[6],payload[7]",
        "outField": "topic",
        "x": 650,
        "y": 480,
        "wires": [
            [
                "1c14bae61a1e5f88"
            ]
        ]
    },
    {
        "id": "42f4fd9f2c6b2078",
        "type": "mysql",
        "z": "94e6a2d5fcdd6bfd",
        "mydb": "c09f346ae50d8da3",
        "name": "Store Development",
        "x": 1290,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "87d64201125cfce4",
        "type": "sqlstring-format",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Build query",
        "query": "INSERT INTO \nDevelopment (source, id, 1d, 1w, 2w, 1m, 3m, created) \nVALUES ('Avanza', ?, ?, ?, ?, ?, ?, ?);\n",
        "vars": "development[0],development[1],development[2],development[6],development[3],development[4],development[5]",
        "outField": "topic",
        "x": 1010,
        "y": 580,
        "wires": [
            [
                "42f4fd9f2c6b2078"
            ]
        ]
    },
    {
        "id": "fa730f4a0ae3f1d9",
        "type": "sqlstring-format",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Build query",
        "query": "INSERT INTO \nIndexFund (source, id, created ) \nVALUES ('Avanza', ?, ?);\n",
        "vars": "id, created",
        "outField": "topic",
        "x": 690,
        "y": 1080,
        "wires": [
            [
                "65b6f9d03fe6ee62"
            ]
        ]
    },
    {
        "id": "65b6f9d03fe6ee62",
        "type": "mysql",
        "z": "94e6a2d5fcdd6bfd",
        "mydb": "c09f346ae50d8da3",
        "name": "Store Index fund",
        "x": 880,
        "y": 1080,
        "wires": [
            [
                "2a0d987cb48e8561"
            ]
        ]
    },
    {
        "id": "6a6d905fa2702cb9",
        "type": "catch",
        "z": "94e6a2d5fcdd6bfd",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 780,
        "y": 40,
        "wires": [
            [
                "bc0db2ee4c357555"
            ]
        ]
    },
    {
        "id": "a7af0117dd0a128c",
        "type": "function",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Prepare",
        "func": "var now = new Date();\nflow.set('created', now); \n\nmsg.method = \"POST\"\nmsg.url = \"https://www.avanza.se/_api/fund-guide/list\"; \nmsg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nmsg.headers['Accept-Language'] = 'en-US,en;q=0.9,sv;q=0.8,da;q=0.7';\nmsg.headers['Content-Type'] = 'application/json;charset=UTF-8';\nmsg.headers['sec-fetch-dest'] = 'empth';\nmsg.headers['sec-fetch-mode'] = 'cors';\nmsg.headers['sec-fetch-site'] = 'same-origin';\nmsg.headers['x-securitytoken'] = '-';\nmsg.headers['cookie'] = '_ga=GA1.2.424461689.1521150369; AZACOOKIEMESSAGE=1; __couid=4e093aa2-15dd-46ca-a994-d100fdeeecbb; _fbp=fb.1.1549137111112.1151006543; AZAHLI=bankId; AZA_ONBOARDING_PERSONAL-MENU-ONBOARDING=true; AZA_ONBOARDING_MY-ECONOMY-ONBOARDING-2019=true; __gads=ID=c6213a5d73ceaf09:T=1583075494:S=ALNI_Mb73WEr_IRAEg6YgmFpL7D95ZkBUQ; _gcl_au=1.1.326852944.1589623979; _gid=GA1.2.444845462.1595943853; AZAPERSISTANCE=0253c8bd2e-1942-40zTzbB06isEzg-FJdNOt_UxskujLI6UQfbGZM4Da8MItrCfLd26Ou2k9vAa58-QQy1eI; JSESSIONID=vodiw1qg1y3mcoklji7m10v4; _gat_UA-1234489-15=1';\nmsg.referrer = 'https://www.avanza.se/fonder/lista.html?managedType=INDEX&sortField=name&sortDirection=ASCENDING';\nmsg.referrerPolicy = 'origin-when-cross-origin';\nmsg.payload = \"{\\\"startIndex\\\":0,\\\"managedType\\\":\\\"INDEX\\\",\\\"sustainabilityProfile\\\":false,\\\"lowCo2\\\":false,\\\"noFossilFuelInvolvement\\\":false,\\\"regionFilter\\\":[],\\\"countryFilter\\\":[],\\\"alignmentFilter\\\":[],\\\"industryFilter\\\":[],\\\"fundTypeFilter\\\":[],\\\"interestTypeFilter\\\":[],\\\"sortField\\\":\\\"developmentOneYear\\\",\\\"sortDirection\\\":\\\"DESCENDING\\\",\\\"name\\\":\\\"\\\",\\\"recommendedHoldingPeriodFilter\\\":[],\\\"companyFilter\\\":[],\\\"productInvolvementsFilter\\\":[],\\\"ratingFilter\\\":[],\\\"sustainabilityRatingFilter\\\":[],\\\"environmentalRatingFilter\\\":[],\\\"socialRatingFilter\\\":[],\\\"governanceRatingFilter\\\":[]}\";\nmsg.mode = 'cors';\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 760,
        "wires": [
            [
                "9bfeef470fa96550"
            ]
        ]
    },
    {
        "id": "9bfeef470fa96550",
        "type": "http request",
        "z": "94e6a2d5fcdd6bfd",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 770,
        "y": 760,
        "wires": [
            [
                "3f0f6f84dedfba45"
            ]
        ]
    },
    {
        "id": "3f0f6f84dedfba45",
        "type": "function",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Extract total number of funds",
        "func": "\nvar no_funds = msg.payload.totalNoFunds / 20; \n//var no_funds = 1;\n\nmsg.count = Math.ceil(no_funds);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 760,
        "wires": [
            [
                "6216ca367b125ae3"
            ]
        ]
    },
    {
        "id": "6216ca367b125ae3",
        "type": "loop",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Outer loop",
        "kind": "fcnt",
        "count": "",
        "initial": "0",
        "step": "1",
        "condition": "",
        "conditionType": "jsonata",
        "when": "before",
        "enumeration": "",
        "enumerationType": "msg",
        "limit": "",
        "loopPayload": "loop-index",
        "finalPayload": "final-count",
        "x": 450,
        "y": 860,
        "wires": [
            [
                "7282ed39cbc9efe7"
            ],
            [
                "67d5149bc7458d1f"
            ]
        ]
    },
    {
        "id": "7282ed39cbc9efe7",
        "type": "debug",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Done index",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 860,
        "wires": []
    },
    {
        "id": "9aaacccaa6993a33",
        "type": "function",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Prepare",
        "func": "var next = flow.get('next');\nvar csrf = flow.get('csrf');\n\nmsg.method = \"POST\"\nmsg.url = \"https://www.avanza.se/_api/fund-guide/list\";\nmsg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nmsg.headers['Accept-Language'] = 'en-US,en;q=0.9,sv;q=0.8,da;q=0.7';\nmsg.headers['Content-Type'] = 'application/json;charset=UTF-8';\nmsg.headers['sec-fetch-dest'] = 'empth';\nmsg.headers['sec-fetch-mode'] = 'cors';\nmsg.headers['sec-fetch-site'] = 'same-origin';\nmsg.headers['x-securitytoken'] = '-';\nmsg.headers['cookie'] = '_ga=GA1.2.424461689.1521150369; AZACOOKIEMESSAGE=1; __couid=4e093aa2-15dd-46ca-a994-d100fdeeecbb; _fbp=fb.1.1549137111112.1151006543; AZAHLI=bankId; AZA_ONBOARDING_PERSONAL-MENU-ONBOARDING=true; AZA_ONBOARDING_MY-ECONOMY-ONBOARDING-2019=true; __gads=ID=c6213a5d73ceaf09:T=1583075494:S=ALNI_Mb73WEr_IRAEg6YgmFpL7D95ZkBUQ; _gcl_au=1.1.326852944.1589623979; _gid=GA1.2.444845462.1595943853; AZAPERSISTANCE=0253c8bd2e-1942-40zTzbB06isEzg-FJdNOt_UxskujLI6UQfbGZM4Da8MItrCfLd26Ou2k9vAa58-QQy1eI; JSESSIONID=vodiw1qg1y3mcoklji7m10v4; _gat_UA-1234489-15=1';\nmsg.referrer = 'https://www.avanza.se/fonder/lista.html?sortField=name&sortDirection=ASCENDING&selectedTab=overview';\nmsg.referrerPolicy = 'origin-when-cross-origin';\nmsg.payload = \"{\\\"startIndex\\\":\" + msg.loop.value * 20 + \",\\\"managedType\\\":\\\"INDEX\\\",\\\"sustainabilityProfile\\\":false,\\\"lowCo2\\\":false,\\\"noFossilFuelInvolvement\\\":false,\\\"regionFilter\\\":[],\\\"countryFilter\\\":[],\\\"alignmentFilter\\\":[],\\\"industryFilter\\\":[],\\\"fundTypeFilter\\\":[],\\\"interestTypeFilter\\\":[],\\\"sortField\\\":\\\"developmentOneYear\\\",\\\"sortDirection\\\":\\\"DESCENDING\\\",\\\"name\\\":\\\"\\\",\\\"recommendedHoldingPeriodFilter\\\":[],\\\"companyFilter\\\":[],\\\"productInvolvementsFilter\\\":[],\\\"ratingFilter\\\":[],\\\"sustainabilityRatingFilter\\\":[],\\\"environmentalRatingFilter\\\":[],\\\"socialRatingFilter\\\":[],\\\"governanceRatingFilter\\\":[]}\";\nmsg.mode = 'cors';\n\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 940,
        "wires": [
            [
                "cf5ad8aa97fa3f73"
            ]
        ]
    },
    {
        "id": "cf5ad8aa97fa3f73",
        "type": "http request",
        "z": "94e6a2d5fcdd6bfd",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 550,
        "y": 940,
        "wires": [
            [
                "bd75a77923d861e0"
            ]
        ]
    },
    {
        "id": "83f9c21376fa6423",
        "type": "function",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Loop extract fund info",
        "func": "var fund_id = msg.payload.orderbookId;\nvar created = flow.get('created');\n\nmsg.id = fund_id;\nmsg.created = created;\n//msg.parts = msg.parts;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1080,
        "wires": [
            [
                "fa730f4a0ae3f1d9"
            ]
        ]
    },
    {
        "id": "bfe9450d79a2dd6d",
        "type": "split",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Split",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": true,
        "addname": "",
        "x": 210,
        "y": 1080,
        "wires": [
            [
                "83f9c21376fa6423"
            ]
        ]
    },
    {
        "id": "bd75a77923d861e0",
        "type": "function",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Extract payload array",
        "func": "var data = msg.payload.fundListViews;\n\nmsg.payload = data;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 940,
        "wires": [
            [
                "bfe9450d79a2dd6d"
            ]
        ]
    },
    {
        "id": "377af3e52665afcc",
        "type": "delay",
        "z": "94e6a2d5fcdd6bfd",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1200,
        "y": 940,
        "wires": [
            [
                "6216ca367b125ae3"
            ]
        ]
    },
    {
        "id": "2a0d987cb48e8561",
        "type": "join",
        "z": "94e6a2d5fcdd6bfd",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1050,
        "y": 1080,
        "wires": [
            [
                "cfca89c1e02cfd21"
            ]
        ]
    },
    {
        "id": "67d5149bc7458d1f",
        "type": "function",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Store msgid",
        "func": "\nvar msgid = msg._msgid;\nflow.set('_msgid', msgid);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 940,
        "wires": [
            [
                "9aaacccaa6993a33"
            ]
        ]
    },
    {
        "id": "3a653bbb8ecd974f",
        "type": "comment",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Get index funds",
        "info": "",
        "x": 140,
        "y": 680,
        "wires": []
    },
    {
        "id": "cfca89c1e02cfd21",
        "type": "function",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Get msgid",
        "func": "var msgid = flow.get('_msgid');\nmsg._msgid = msgid; \nmsg.payload = {};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 1080,
        "wires": [
            [
                "377af3e52665afcc"
            ]
        ]
    },
    {
        "id": "ecc577ccf11ea70e",
        "type": "sqlstring-format",
        "z": "94e6a2d5fcdd6bfd",
        "name": "Build query",
        "query": "INSERT INTO \nRuns (source, created) \nVALUES (?, ?);\n",
        "vars": "source, created",
        "outField": "topic",
        "x": 710,
        "y": 100,
        "wires": [
            [
                "9eaece6ae40fe8e6"
            ]
        ]
    },
    {
        "id": "9eaece6ae40fe8e6",
        "type": "mysql",
        "z": "94e6a2d5fcdd6bfd",
        "mydb": "c09f346ae50d8da3",
        "name": "Store Runs",
        "x": 890,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "7969ea993184b03b",
        "type": "inject",
        "z": "3d8b3054c8fc3986",
        "name": "Start",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 330,
        "y": 40,
        "wires": [
            [
                "dfd886e010a62389"
            ]
        ]
    },
    {
        "id": "bb72586401a125a7",
        "type": "comment",
        "z": "3d8b3054c8fc3986",
        "name": "Create result files with headers",
        "info": "",
        "x": 150,
        "y": 100,
        "wires": []
    },
    {
        "id": "dfd886e010a62389",
        "type": "function",
        "z": "3d8b3054c8fc3986",
        "name": "File headers",
        "func": "let headers = \"ID,ISIN,NAME,INSTRUMENT_GROUP_TYPE,INSTRUMENT_TYPE,PE,PS,EPS,PB,DIV_PER_SHARE,DIV_YIELD,YIELD_1D,YIELD_1W,YIELD_1M,YIELD_3M,EXCHANGE_COUNTRY,EXCHANGE_NAME,EXCHANGE_LIST\"\nreturn {payload: headers }\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 100,
        "wires": [
            [
                "379b373d893a4561"
            ]
        ]
    },
    {
        "id": "379b373d893a4561",
        "type": "file",
        "z": "3d8b3054c8fc3986",
        "name": "Create file with headers",
        "filename": "C:\\mano\\NodeRed\\Avanza_FundsDevelopment.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 630,
        "y": 100,
        "wires": [
            [
                "eb8dc96c5e0993c5"
            ]
        ]
    },
    {
        "id": "e4c98e583443082c",
        "type": "function",
        "z": "3d8b3054c8fc3986",
        "name": "File headers",
        "func": "let headers = \"ID,Type,Value\"\nreturn {payload: headers }\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 100,
        "wires": [
            [
                "ee431d750c305be2"
            ]
        ]
    },
    {
        "id": "ee431d750c305be2",
        "type": "file",
        "z": "3d8b3054c8fc3986",
        "name": "Create file with headers",
        "filename": "C:\\mano\\NodeRed\\Avanza_FundsDevelopment2W.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1070,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "eb8dc96c5e0993c5",
        "type": "function",
        "z": "3d8b3054c8fc3986",
        "name": "Prepare",
        "func": "\nmsg.method = \"GET\"\nmsg.url = \"https://www.avanza.se/frontend/template.html/marketing/advanced-filter/advanced-filter-template?1698852874844&widgets.marketCapitalInSek.filter.lower=&widgets.marketCapitalInSek.filter.upper=&widgets.marketCapitalInSek.active=true&widgets.stockLists.filter.list%5B0%5D=SE.LargeCap.SE&widgets.stockLists.active=true&widgets.numberOfOwners.filter.lower=&widgets.numberOfOwners.filter.upper=&widgets.numberOfOwners.active=true&parameters.startIndex=0&parameters.maxResults=100&parameters.selectedFields%5B0%5D=LATEST&parameters.selectedFields%5B1%5D=DEVELOPMENT_TODAY&parameters.selectedFields%5B2%5D=DEVELOPMENT_ONE_YEAR&parameters.selectedFields%5B3%5D=PRICE_PER_EARNINGS&parameters.selectedFields%5B4%5D=DIRECT_YIELD&parameters.selectedFields%5B5%5D=NBR_OF_OWNERS&parameters.selectedFields%5B6%5D=LIST&parameters.selectedFields%5B7%5D=SECTOR&parameters.selectedFields%5B8%5D=DEVELOPMENT_MONTH&parameters.selectedFields%5B9%5D=DEVELOPMENT_THREE_MONTHS&parameters.selectedFields%5B10%5D=DEVELOPMENT_WEEK&parameters.selectedFields%5B11%5D=PRICE_PER_SALES&parameters.selectedFields%5B12%5D=NEXT_DIVIDEND_AMOUNT\"; \nmsg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nmsg.headers['Accept-Language'] = 'en-US,en;q=0.9,sv;q=0.8,da;q=0.7';\nmsg.headers['Content-Type'] = 'application/json;charset=UTF-8';\nmsg.headers['sec-ch-ua'] = \"\\\"Chromium\\\";v=\\\"118\\\", \\\"Google Chrome\\\";v=\\\"118\\\", \\\"Not=A?Brand\\\";v=\\\"99\\\"\";\nmsg.headers['sec-ch-ua-mobile'] = \"?0\";\nmsg.headers['sec-ch-ua-platform'] = \"\\\"Windows\\\"\";\nmsg.headers['sec-fetch-dest'] = 'empth';\nmsg.headers['sec-fetch-mode'] = 'cors';\nmsg.headers['sec-fetch-site'] = 'same-origin';\nmsg.headers['x-securitytoken'] = '-';\nmsg.headers['cookie'] = 'AZAHLI=bankId; AZACOOKIECONSENT_UX=YES; AZACOOKIECONSENT_ANALYSIS=YES; AZACOOKIECONSENT_MARKETING=YES; FPID=FPID2.2.k65c5XS7FcoX2wk1jv793ZMgcNIuGMhcp0M%2Facu8md4%3D.1651668247; MDLAPIAUTH=MDLAPIAUTH983DEF900E96F84EFEFDD3AF206DC4ADA17C6003259D128A693C1BC89594C67C0B094D2AB72FB2DB88C16A8AE7AE6EE9B97A3D355B6AF9837D0507D399E2A146214697B171E116AFCFDA2D70A6C1F5AB5CFA352468F41F7262C294E4F5EB3D7A654E3F4030C757AE5C7316CE7068DE818E4F79C869136FD0D2C661D101D308BEF6C3833FF67F363E83FC807151CCDCF4E764C2558DFF0093A2E55C6CB9855487D452C1113E458838768A84A203A3FA2CBA4A1B528939B084010906422AAEA1CAE1E49058AAFE9D40D69B94BA6058397B841D4E31F09347F33DDC4A99163CDD29MDLAPIAUTH; AZAMENUTAB=/min-ekonomi/transaktioner.html||; AZAPERSISTENCE=0253c8bd2e-1942-40Ph5NAQPpdcBKN9qVxf_He8S_YhCCKTClPPrbyn1Mvq_QyActlFprz0SeYm_92gQ2iQE; PAGE_ANALYTICS=c8ab55cc-0a62-46bb-873d-8ecaeb204c1e; _gid=GA1.2.7139980.1698852305; FPLC=nJYpSAsz4%2FcZd0PX2Y10ewlhK1goHJYly2JuvVteloaZvqdLr2Pb2dUyHcGUw8Q2ubOet%2F8tWGfz13abNnI4f049DJ3l%2FhNXuWfX4ARIZYF%2F%2FEnAGffgHS%2F%2FpETJMQ%3D%3D; _ga=GA1.2.909348945.1651668247; _gat_UA-1234489-15=1; _ga_W3Z698S33N=GS1.1.1698852305.17.1.1698852874.0.0.0';\nmsg.referrer = 'https://www.avanza.se/aktier/lista.html';\nmsg.referrerPolicy = 'origin-when-cross-origin';\nmsg.body = null;\nmsg.mode = 'cors';\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 160,
        "wires": [
            [
                "252912dc7b8b4390"
            ]
        ]
    },
    {
        "id": "252912dc7b8b4390",
        "type": "http request",
        "z": "3d8b3054c8fc3986",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 710,
        "y": 160,
        "wires": [
            [
                "a547158d6e59d444"
            ]
        ]
    },
    {
        "id": "2f716672d854cfe2",
        "type": "function",
        "z": "3d8b3054c8fc3986",
        "name": "Extract total number of funds",
        "func": "\nvar no_funds = msg.payload.totalNoFunds / 20; \n//var no_funds = 1;\nmsg.count = parseInt(no_funds);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 160,
        "wires": [
            [
                "6644987c7cb8dd10"
            ]
        ]
    },
    {
        "id": "e98665e2b3ab9fc0",
        "type": "comment",
        "z": "3d8b3054c8fc3986",
        "name": "Figure out number of fund iterations needed",
        "info": "",
        "x": 190,
        "y": 160,
        "wires": []
    },
    {
        "id": "6644987c7cb8dd10",
        "type": "loop",
        "z": "3d8b3054c8fc3986",
        "name": "Outer loop",
        "kind": "fcnt",
        "count": "",
        "initial": "0",
        "step": "1",
        "condition": "",
        "conditionType": "jsonata",
        "when": "before",
        "enumeration": "",
        "enumerationType": "msg",
        "limit": "",
        "loopPayload": "loop-index",
        "finalPayload": "final-count",
        "x": 390,
        "y": 260,
        "wires": [
            [
                "d297a6d451c51380"
            ],
            [
                "c10ff5d42d89af09"
            ]
        ]
    },
    {
        "id": "d297a6d451c51380",
        "type": "debug",
        "z": "3d8b3054c8fc3986",
        "name": "Done",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 240,
        "wires": []
    },
    {
        "id": "dcdc2c1775fb81ec",
        "type": "function",
        "z": "3d8b3054c8fc3986",
        "name": "Prepare",
        "func": "var next = flow.get('next');\nvar csrf = flow.get('csrf');\n\nmsg.method = \"POST\"\nmsg.url = \"https://www.avanza.se/_api/fund-guide/list\";\nmsg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nmsg.headers['Accept-Language'] = 'en-US,en;q=0.9,sv;q=0.8,da;q=0.7';\nmsg.headers['Content-Type'] = 'application/json;charset=UTF-8';\nmsg.headers['sec-fetch-dest'] = 'empth';\nmsg.headers['sec-fetch-mode'] = 'cors';\nmsg.headers['sec-fetch-site'] = 'same-origin';\nmsg.headers['x-securitytoken'] = '-';\nmsg.headers['cookie'] = '_ga=GA1.2.424461689.1521150369; AZACOOKIEMESSAGE=1; __couid=4e093aa2-15dd-46ca-a994-d100fdeeecbb; _fbp=fb.1.1549137111112.1151006543; AZAHLI=bankId; AZA_ONBOARDING_PERSONAL-MENU-ONBOARDING=true; AZA_ONBOARDING_MY-ECONOMY-ONBOARDING-2019=true; __gads=ID=c6213a5d73ceaf09:T=1583075494:S=ALNI_Mb73WEr_IRAEg6YgmFpL7D95ZkBUQ; _gcl_au=1.1.326852944.1589623979; _gid=GA1.2.444845462.1595943853; AZAPERSISTANCE=0253c8bd2e-1942-40zTzbB06isEzg-FJdNOt_UxskujLI6UQfbGZM4Da8MItrCfLd26Ou2k9vAa58-QQy1eI; JSESSIONID=vodiw1qg1y3mcoklji7m10v4; _gat_UA-1234489-15=1';\nmsg.referrer = 'https://www.avanza.se/fonder/lista.html?sortField=name&sortDirection=ASCENDING&selectedTab=overview';\nmsg.referrerPolicy = 'origin-when-cross-origin';\nmsg.payload = \"{\\\"startIndex\\\":\" + msg.loop.value + \",\\\"indexFund\\\":false,\\\"sustainabilityProfile\\\":false,\\\"lowCo2\\\":false,\\\"noFossilFuelInvolvement\\\":false,\\\"regionFilter\\\":[],\\\"countryFilter\\\":[],\\\"alignmentFilter\\\":[],\\\"industryFilter\\\":[],\\\"fundTypeFilter\\\":[],\\\"interestTypeFilter\\\":[],\\\"sortField\\\":\\\"developmentOneYear\\\",\\\"sortDirection\\\":\\\"DESCENDING\\\",\\\"name\\\":\\\"\\\",\\\"recommendedHoldingPeriodFilter\\\":[],\\\"companyFilter\\\":[],\\\"productInvolvementsFilter\\\":[],\\\"ratingFilter\\\":[],\\\"sustainabilityRatingFilter\\\":[],\\\"environmentalRatingFilter\\\":[],\\\"socialRatingFilter\\\":[],\\\"governanceRatingFilter\\\":[]}\";\nmsg.mode = 'cors';\n\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 340,
        "wires": [
            [
                "521aa0f49e210f71"
            ]
        ]
    },
    {
        "id": "521aa0f49e210f71",
        "type": "http request",
        "z": "3d8b3054c8fc3986",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 490,
        "y": 340,
        "wires": [
            [
                "f1bbceb7a5d8192d"
            ]
        ]
    },
    {
        "id": "58c21559876609c4",
        "type": "function",
        "z": "3d8b3054c8fc3986",
        "name": "Loop extract fund info",
        "func": "var fund_info = [];\nvar fund_id = msg.payload.orderbookId;\nvar fund_name = msg.payload.name;\nvar fund_isin = msg.payload.isin;\nvar fund_category = msg.payload.category;\nvar fund_type = msg.payload.fundType;\nvar fund_totalfee = msg.payload.totalFee;\nvar fund_risk = msg.payload.risk;\nvar fund_w1 = msg.payload.developmentOneWeek;\nvar fund_m1 = msg.payload.developmentOneMonth;\nvar fund_m3 = msg.payload.developmentThreeMonths;\nvar fund_d1 = msg.payload.developmentOneDay;\nvar fund_y1 = msg.payload.developmentOneYear;\n\nconst search = ',';\nconst replaceWith = '|';\nconst fund_category2 = fund_category.split(search).join(replaceWith);\n\nfund_info.push(fund_id, fund_isin, fund_name, fund_type, fund_totalfee, fund_risk, fund_w1, fund_m1, fund_m3, fund_d1, fund_y1, fund_category2);\n\nmsg.payload = fund_info;\nmsg.id = fund_id;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 480,
        "wires": [
            [
                "3b5214f8f91ab651"
            ]
        ]
    },
    {
        "id": "3b5214f8f91ab651",
        "type": "csv",
        "z": "3d8b3054c8fc3986",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "",
        "skip": "0",
        "strings": false,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 530,
        "y": 480,
        "wires": [
            [
                "0a2609eaf61848cc"
            ]
        ]
    },
    {
        "id": "0a2609eaf61848cc",
        "type": "file",
        "z": "3d8b3054c8fc3986",
        "name": "Write",
        "filename": "C:\\mano\\NodeRed\\Avanza_FundsDevelopment.txt",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 670,
        "y": 480,
        "wires": [
            [
                "d5b0cfb86bb7deb8"
            ]
        ]
    },
    {
        "id": "0e9b1d6d12bdbc9f",
        "type": "split",
        "z": "3d8b3054c8fc3986",
        "name": "Split",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": true,
        "addname": "",
        "x": 150,
        "y": 480,
        "wires": [
            [
                "58c21559876609c4"
            ]
        ]
    },
    {
        "id": "f1bbceb7a5d8192d",
        "type": "function",
        "z": "3d8b3054c8fc3986",
        "name": "Extract payload array",
        "func": "var data = msg.payload.fundListViews;\n\nmsg.payload = data;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 340,
        "wires": [
            [
                "0e9b1d6d12bdbc9f"
            ]
        ]
    },
    {
        "id": "ce85cc8642d9dcfc",
        "type": "delay",
        "z": "3d8b3054c8fc3986",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1140,
        "y": 340,
        "wires": [
            [
                "6644987c7cb8dd10"
            ]
        ]
    },
    {
        "id": "01466f9d51681fd0",
        "type": "function",
        "z": "3d8b3054c8fc3986",
        "name": "Get msgid",
        "func": "var msgid = flow.get('_msgid');\nmsg._msgid = msgid; \nmsg.payload = {};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 480,
        "wires": [
            [
                "ce85cc8642d9dcfc",
                "6fad3b58997d02aa"
            ]
        ]
    },
    {
        "id": "d5b0cfb86bb7deb8",
        "type": "join",
        "z": "3d8b3054c8fc3986",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 830,
        "y": 480,
        "wires": [
            [
                "01466f9d51681fd0"
            ]
        ]
    },
    {
        "id": "c10ff5d42d89af09",
        "type": "function",
        "z": "3d8b3054c8fc3986",
        "name": "Store msgid",
        "func": "\nvar msgid = msg._msgid;\nflow.set('_msgid', msgid);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 340,
        "wires": [
            [
                "dcdc2c1775fb81ec"
            ]
        ]
    },
    {
        "id": "def7c47126fc1d75",
        "type": "function",
        "z": "3d8b3054c8fc3986",
        "name": "Prepare",
        "func": "\n  //To\n  //var now_to = new Date(new Date().setDate(new Date().getDate() - 1));\n  var now_to = new Date(new Date().setDate(new Date().getDate() - 3));\n  var year_to = now_to.getFullYear();\n  var month_to = (now_to.getMonth() + 1);\n  var monthasstr_to = month_to.toString();\n  var month2_to = monthasstr_to.padStart(2, '0');\n  var day_to = (\"0\" + now_to.getDate()).slice(-2);\n  var To = year_to +'-'+ month2_to +'-'+ day_to;\n\n  var FromInterval = [17]; //15 //3,4,\n  var ToGet = [];\n\n  for (var i = 0; i < FromInterval.length; i++) {\n  //From\n    var interval = FromInterval[i];\n    var now_from = new Date(new Date().setDate(new Date().getDate() - interval));\n    var year_from = now_from.getFullYear();\n    var month_from = (now_from.getMonth() + 1);\n    var monthasstr_from = month_from.toString();\n    var month2_from = monthasstr_from.padStart(2, '0');\n    var day_from = (\"0\" + now_from.getDate()).slice(-2);\n    var From = year_from +'-'+ month2_from +'-'+ day_from;\n    ToGet.push([msg.id, From, To])\n\n  }\n\nmsg.method = \"GET\"\nmsg.url = \"https://www.avanza.se/_api/fund-guide/chart/\" + msg.id + \"/\" + From + \"/\" + To; \nmsg.headers = {};\nmsg.headers['accept'] = \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\"\nmsg.headers['accept-language'] = \"en-US,en;q=0.9,sv;q=0.8,da;q=0.7\";\nmsg.headers['cache-control'] = \"max-age=0\";\nmsg.headers['sec-fetch-dest'] = \"document\";\nmsg.headers['sec-fetch-mode'] = \"navigate\";\nmsg.headers['sec-fetch-site'] = \"none\";\nmsg.headers['sec-fetch-user'] = \"?1\";\nmsg.headers['upgrade-insecure-requests'] = \"1\"; \nmsg.headers['cookie'] = \"_ga=GA1.2.424461689.1521150369; AZACOOKIEMESSAGE=1; __couid=4e093aa2-15dd-46ca-a994-d100fdeeecbb; _fbp=fb.1.1549137111112.1151006543; AZAHLI=bankId; AZA_ONBOARDING_PERSONAL-MENU-ONBOARDING=true; AZA_ONBOARDING_MY-ECONOMY-ONBOARDING-2019=true; __gads=ID=c6213a5d73ceaf09:T=1583075494:S=ALNI_Mb73WEr_IRAEg6YgmFpL7D95ZkBUQ; _gcl_au=1.1.326852944.1589623979; AZAPERSISTANCE=0253c8bd2e-1942-40ntpmfxE1_ERCIujtXymO3cCLV4u67ipcfEYxOWp0HVrCK6wroaW_YTXKcOUljCub60A; JSESSIONID=1gqpio0cdki6n1fcpbreishoyp; _gid=GA1.2.206532994.1596622924\";\nmsg.referrerPolicy = 'no-referrer-when-downgrade';\nmsg.body = null;\nmsg.mode = \"cors\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 580,
        "wires": [
            [
                "ce2b7eb2f4779a6d"
            ]
        ]
    },
    {
        "id": "ce2b7eb2f4779a6d",
        "type": "http request",
        "z": "3d8b3054c8fc3986",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 550,
        "y": 580,
        "wires": [
            [
                "3b2553a392a487b5"
            ]
        ]
    },
    {
        "id": "3b2553a392a487b5",
        "type": "function",
        "z": "3d8b3054c8fc3986",
        "name": "Extract 2weeks info",
        "func": "var TargetDates = [];\n//var last = new Date(new Date().setDate(new Date().getDate() - 2)).toDateString();\n//var Min14 = new Date(new Date().setDate(new Date().getDate() - 16)).toDateString();\nvar last = new Date(new Date().setDate(new Date().getDate() - 3)).toDateString();\nvar Min14 = new Date(new Date().setDate(new Date().getDate() - 18)).toDateString();\n\n\nTargetDates.push(last, Min14);\n\nvar ResultArray = [];\nfor (let i = 0; i < msg.payload.dataSerie.length; i++) {\n    var asdate = new Date(msg.payload.dataSerie[i].x).toDateString();\n    var value = msg.payload.dataSerie[i].y;\n    ResultArray.push([asdate, value]);\n}\n\n//remove all dates we are not interested in\nvar ResultArray2 = ResultArray.filter(item => TargetDates.includes(item[0]));\n\n//Calculate result for periods\nvar w2 = Number(ResultArray2[1][1] - ResultArray2[0][1]);\nvar Type = '2W';\nvar Development = [];\n//if (w2 > 0) {\n    Development.push([msg.id, Type, w2]);\n//}\n\nmsg.payload = Development;\nmsg.Development = Development;\nmsg.Olle = w2;\nmsg.ResultArray = ResultArray;\nmsg.ResultArray2 = ResultArray2;\nmsg.TargetDates = TargetDates;\n\nreturn msg;\n\n/*\n      var result_json1 = await result_json.json();\n      var x = result_json1.dataSerie[result_json1.dataSerie.length - 1];    \n      var x2 = x.y;\n      var fromdate = result_json1.fromDate;    \n      var fromdate2 = new Date(fromdate);\n\n      var todate = result_json1.toDate;   \n      var todate2 = new Date(todate);\n        \n      var days = Math.round((todate2 - fromdate2) / (1000 * 60 * 60 * 24)) +1;\n      Data.push([ID, days, x2])\n*/",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 580,
        "wires": [
            [
                "d938232241b2c3de"
            ]
        ]
    },
    {
        "id": "d938232241b2c3de",
        "type": "csv",
        "z": "3d8b3054c8fc3986",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "",
        "skip": "0",
        "strings": false,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 950,
        "y": 580,
        "wires": [
            [
                "cf5c6c14a05a68a9"
            ]
        ]
    },
    {
        "id": "cf5c6c14a05a68a9",
        "type": "file",
        "z": "3d8b3054c8fc3986",
        "name": "Write",
        "filename": "C:\\mano\\NodeRed\\Avanza_FundsDevelopment2W.txt",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1110,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "088c6651798c57b7",
        "type": "comment",
        "z": "3d8b3054c8fc3986",
        "name": "Loop 100 shares per iteration",
        "info": "",
        "x": 160,
        "y": 260,
        "wires": []
    },
    {
        "id": "c9c89f52d39464ac",
        "type": "comment",
        "z": "3d8b3054c8fc3986",
        "name": "Split result into 100 parts",
        "info": "",
        "x": 170,
        "y": 400,
        "wires": []
    },
    {
        "id": "b98bad53f885d5e9",
        "type": "comment",
        "z": "3d8b3054c8fc3986",
        "name": "Query 2 week result for each fund",
        "info": "",
        "x": 170,
        "y": 540,
        "wires": []
    },
    {
        "id": "c0d128b9792bbd61",
        "type": "debug",
        "z": "3d8b3054c8fc3986",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 680,
        "wires": []
    },
    {
        "id": "a547158d6e59d444",
        "type": "debug",
        "z": "3d8b3054c8fc3986",
        "name": "debug 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 240,
        "wires": []
    },
    {
        "id": "1ec69fee204b1ccb",
        "type": "debug",
        "z": "3d8b3054c8fc3986",
        "name": "debug 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 540,
        "wires": []
    },
    {
        "id": "558b144144b1f2d5",
        "type": "debug",
        "z": "3d8b3054c8fc3986",
        "name": "debug 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 540,
        "wires": []
    },
    {
        "id": "6fad3b58997d02aa",
        "type": "debug",
        "z": "3d8b3054c8fc3986",
        "name": "debug 16",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 500,
        "wires": []
    }
]